src/kOrganizify/Server/main.cpp:1:0: information: Include file: <QCoreApplication> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <QCoreApplication>
^
src/kOrganizify/Server/server.h:4:0: information: Include file: <QObject> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <QObject>
^
src/kOrganizify/Server/server.h:5:0: information: Include file: <QTcpServer> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <QTcpServer>
^
src/kOrganizify/Server/server.h:6:0: information: Include file: <QTcpSocket> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <QTcpSocket>
^
src/kOrganizify/kOrganizify/src/event.h:4:0: information: Include file: <QString> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <QString>
^
src/kOrganizify/kOrganizify/src/event.h:5:0: information: Include file: <QDateTime> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <QDateTime>
^
src/kOrganizify/kOrganizify/src/event.h:6:0: information: Include file: <QHash> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <QHash>
^
src/kOrganizify/kOrganizify/src/event.h:7:0: information: Include file: <QObject> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <QObject>
^
src/kOrganizify/kOrganizify/src/basicevent.h:4:0: information: Include file: <QString> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <QString>
^
src/kOrganizify/kOrganizify/src/saveload.h:4:0: information: Include file: <QObject> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <QObject>
^
src/kOrganizify/kOrganizify/src/saveload.h:5:0: information: Include file: <QJsonObject> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <QJsonObject>
^
src/kOrganizify/kOrganizify/src/calendar.h:6:0: information: Include file: <QList> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <QList>
^
src/kOrganizify/kOrganizify/src/calendar.h:7:0: information: Include file: <QString> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <QString>
^
src/kOrganizify/kOrganizify/src/calendar.h:8:0: information: Include file: <QJsonArray> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <QJsonArray>
^
src/kOrganizify/kOrganizify/src/calendar.h:9:0: information: Include file: <QJsonValue> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <QJsonValue>
^
src/kOrganizify/Server/server.h:13:8: error: There is an unknown macro here somewhere. Configuration is required. If slots is a macro then please configure it. [unknownMacro]
public slots:
       ^
src/kOrganizify/Server/server.cpp:2:0: information: Include file: <QString> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <QString>
^
src/kOrganizify/Server/server.cpp:3:0: information: Include file: <QJsonObject> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <QJsonObject>
^
src/kOrganizify/Server/server.cpp:4:0: information: Include file: <QJsonDocument> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <QJsonDocument>
^
src/kOrganizify/Test/basicEventTest.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 109 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/kOrganizify/Test/catch.hpp:474:0: information: Include file: <iosfwd> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <iosfwd>
^
src/kOrganizify/Test/catch.hpp:475:0: information: Include file: <string> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <string>
^
src/kOrganizify/Test/catch.hpp:476:0: information: Include file: <cstdint> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <cstdint>
^
src/kOrganizify/Test/catch.hpp:564:0: information: Include file: <vector> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <vector>
^
src/kOrganizify/Test/catch.hpp:594:0: information: Include file: <cstddef> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <cstddef>
^
src/kOrganizify/Test/catch.hpp:595:0: information: Include file: <string> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <string>
^
src/kOrganizify/Test/catch.hpp:596:0: information: Include file: <iosfwd> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <iosfwd>
^
src/kOrganizify/Test/catch.hpp:597:0: information: Include file: <cassert> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <cassert>
^
src/kOrganizify/Test/catch.hpp:919:0: information: Include file: <type_traits> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <type_traits>
^
src/kOrganizify/Test/catch.hpp:1413:0: information: Include file: <vector> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <vector>
^
src/kOrganizify/Test/catch.hpp:1414:0: information: Include file: <cstddef> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <cstddef>
^
src/kOrganizify/Test/catch.hpp:1415:0: information: Include file: <type_traits> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <type_traits>
^
src/kOrganizify/Test/catch.hpp:1416:0: information: Include file: <string> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <string>
^
src/kOrganizify/Test/catch.hpp:1419:0: information: Include file: <iosfwd> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <iosfwd>
^
src/kOrganizify/Test/catch.hpp:1420:0: information: Include file: <cstddef> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <cstddef>
^
src/kOrganizify/Test/catch.hpp:1421:0: information: Include file: <ostream> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ostream>
^
src/kOrganizify/Test/catch.hpp:1459:0: information: Include file: <vector> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <vector>
^
src/kOrganizify/Test/catch.hpp:2187:0: information: Include file: <iosfwd> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <iosfwd>
^
src/kOrganizify/Test/catch.hpp:2432:0: information: Include file: <string> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <string>
^
src/kOrganizify/Test/catch.hpp:2433:0: information: Include file: <chrono> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <chrono>
^
src/kOrganizify/Test/catch.hpp:2592:0: information: Include file: <string> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <string>
^
src/kOrganizify/Test/catch.hpp:2593:0: information: Include file: <vector> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <vector>
^
src/kOrganizify/Test/catch.hpp:2823:0: information: Include file: <cstddef> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <cstddef>
^
src/kOrganizify/Test/catch.hpp:2854:0: information: Include file: <string> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <string>
^
src/kOrganizify/Test/catch.hpp:2885:0: information: Include file: <cstdint> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <cstdint>
^
src/kOrganizify/Test/catch.hpp:2905:0: information: Include file: <string> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <string>
^
src/kOrganizify/Test/catch.hpp:2945:0: information: Include file: <string> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <string>
^
src/kOrganizify/Test/catch.hpp:2946:0: information: Include file: <memory> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <memory>
^
src/kOrganizify/Test/catch.hpp:2998:0: information: Include file: <exception> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <exception>
^
src/kOrganizify/Test/catch.hpp:2999:0: information: Include file: <string> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <string>
^
src/kOrganizify/Test/catch.hpp:3000:0: information: Include file: <vector> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <vector>
^
src/kOrganizify/Test/catch.hpp:3071:0: information: Include file: <type_traits> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <type_traits>
^
src/kOrganizify/Test/catch.hpp:3192:0: information: Include file: <string> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <string>
^
src/kOrganizify/Test/catch.hpp:3193:0: information: Include file: <iosfwd> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <iosfwd>
^
src/kOrganizify/Test/catch.hpp:3194:0: information: Include file: <vector> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <vector>
^
src/kOrganizify/Test/catch.hpp:3230:0: information: Include file: <string> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <string>
^
src/kOrganizify/Test/catch.hpp:3231:0: information: Include file: <vector> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <vector>
^
src/kOrganizify/Test/catch.hpp:3481:0: information: Include file: <functional> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <functional>
^
src/kOrganizify/Test/catch.hpp:3482:0: information: Include file: <string> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <string>
^
src/kOrganizify/Test/catch.hpp:3529:0: information: Include file: <string> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <string>
^
src/kOrganizify/Test/catch.hpp:3598:0: information: Include file: <algorithm> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <algorithm>
^
src/kOrganizify/Test/catch.hpp:3838:0: information: Include file: <memory> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <memory>
^
src/kOrganizify/Test/catch.hpp:3869:0: information: Include file: <exception> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <exception>
^
src/kOrganizify/Test/catch.hpp:3908:0: information: Include file: <memory> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <memory>
^
src/kOrganizify/Test/catch.hpp:3909:0: information: Include file: <vector> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <vector>
^
src/kOrganizify/Test/catch.hpp:3910:0: information: Include file: <cassert> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <cassert>
^
src/kOrganizify/Test/catch.hpp:3912:0: information: Include file: <utility> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <utility>
^
src/kOrganizify/Test/catch.hpp:3913:0: information: Include file: <exception> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <exception>
^
src/kOrganizify/Test/catch.hpp:4340:0: information: Include file: <memory> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <memory>
^
src/kOrganizify/Test/catch.hpp:4461:0: information: Include file: <chrono> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <chrono>
^
src/kOrganizify/Test/catch.hpp:4462:0: information: Include file: <iosfwd> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <iosfwd>
^
src/kOrganizify/Test/catch.hpp:4463:0: information: Include file: <string> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <string>
^
src/kOrganizify/Test/catch.hpp:4464:0: information: Include file: <vector> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <vector>
^
src/kOrganizify/Test/catch.hpp:4465:0: information: Include file: <memory> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <memory>
^
src/kOrganizify/Test/catch.hpp:4542:0: information: Include file: <cstdint> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <cstdint>
^
src/kOrganizify/Test/catch.hpp:4590:0: information: Include file: <random> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <random>
^
src/kOrganizify/Test/catch.hpp:4752:0: information: Include file: <string> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <string>
^
src/kOrganizify/Test/catch.hpp:4753:0: information: Include file: <vector> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <vector>
^
src/kOrganizify/Test/catch.hpp:4754:0: information: Include file: <memory> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <memory>
^
src/kOrganizify/Test/catch.hpp:2375:46: style: inconclusive: Boolean expression 'm_lhs' is used in bitwise operation. Did you mean '||'? [bitwiseOnBoolean]
            return { static_cast<bool>(m_lhs | rhs), m_lhs, "|", rhs };
                                             ^
src/kOrganizify/Test/catch.hpp:2379:46: style: inconclusive: Boolean expression 'm_lhs' is used in bitwise operation. Did you mean '&&'? [bitwiseOnBoolean]
            return { static_cast<bool>(m_lhs & rhs), m_lhs, "&", rhs };
                                             ^
src/kOrganizify/Test/catch.hpp:4404:9: warning: Member variable 'Option::storage' is not initialized in the constructor. [uninitMemberVar]
        Option() : nullableValue( nullptr ) {}
        ^
src/kOrganizify/Test/catch.hpp:4405:9: warning: Member variable 'Option::storage' is not initialized in the constructor. [uninitMemberVar]
        Option( T const& _value )
        ^
src/kOrganizify/Test/catch.hpp:4408:9: warning: Member variable 'Option::storage' is not initialized in the copy constructor. [uninitMemberVar]
        Option( Option const& _other )
        ^
src/kOrganizify/Test/catch.hpp:1480:33: performance: inconclusive: Technically the member function 'Catch::IMutableEnumValuesRegistry::registerEnum' can be static (but you may consider moving to unnamed namespace). [functionStatic]
        Detail::EnumInfo const& registerEnum( StringRef enumName, StringRef allEnums, std::initializer_list<E> values ) {
                                ^
src/kOrganizify/Test/catch.hpp:2414:14: style: inconclusive: Technically the member function 'Catch::Decomposer::operator<=' can be const. [functionConst]
        auto operator <= ( T const& lhs ) -> ExprLhs<T const&> {
             ^
src/kOrganizify/Test/catch.hpp:2418:14: style: inconclusive: Technically the member function 'Catch::Decomposer::operator<=' can be const. [functionConst]
        auto operator <=( bool value ) -> ExprLhs<bool> {
             ^
src/kOrganizify/Test/catch.hpp:3094:16: style: inconclusive: Technically the member function 'Catch::Detail::Approx::operator()' can be const. [functionConst]
        Approx operator()( T const& value ) {
               ^
src/kOrganizify/Test/catch.hpp:2394:14: style: inconclusive: Technically the member function 'ExprLhs < bool >::operator||' can be const. [functionConst]
        auto operator || ( RhsT const& ) -> BinaryExpr<LhsT, RhsT const&> const {
             ^
src/kOrganizify/Test/catch.hpp:4177:14: style: Virtual function 'next' is called from constructor 'FilterGenerator(P&&pred,GeneratorWrapper<T>&&generator)' at line 4166. Dynamic binding is not used. [virtualCallInConstructor]
        bool next() override {
             ^
src/kOrganizify/Test/catch.hpp:4166:42: note: Calling next
                auto has_initial_value = next();
                                         ^
src/kOrganizify/Test/catch.hpp:4177:14: note: next is a virtual function
        bool next() override {
             ^
src/kOrganizify/Test/catch.hpp:2631:25: warning: The struct 'MessageBuilder' defines member function with name 'operator<<' also defined in its parent struct 'MessageStream'. [duplInheritedMember]
        MessageBuilder& operator << ( T const& value ) {
                        ^
src/kOrganizify/Test/catch.hpp:2617:24: note: Parent function 'MessageStream::operator<<'
        MessageStream& operator << ( T const& value ) {
                       ^
src/kOrganizify/Test/catch.hpp:2631:25: note: Derived function 'MessageBuilder::operator<<'
        MessageBuilder& operator << ( T const& value ) {
                        ^
src/kOrganizify/Test/catch.hpp:618:9: style: Class 'StringRef' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
        StringRef( char const* rawChars ) noexcept;
        ^
src/kOrganizify/Test/catch.hpp:625:9: style: Class 'StringRef' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
        StringRef( std::string const& stdString ) noexcept
        ^
src/kOrganizify/Test/catch.hpp:963:5: style: Class 'TestInvokerAsMethod' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
    TestInvokerAsMethod( void (C::*testAsMethod)() ) noexcept : m_testAsMethod( testAsMethod ) {}
    ^
src/kOrganizify/Test/catch.hpp:979:5: style: Struct 'NameAndTags' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
    NameAndTags( StringRef const& name_ = StringRef(), StringRef const& tags_ = StringRef() ) noexcept;
    ^
src/kOrganizify/Test/catch.hpp:2532:9: style: Class 'LazyExpression' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
        LazyExpression( bool isNegated );
        ^
src/kOrganizify/Test/catch.hpp:2911:9: style: Class 'Section' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
        Section( SectionInfo const& info );
        ^
src/kOrganizify/Test/catch.hpp:3050:9: style: Class 'ExceptionTranslatorRegistrar' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
        ExceptionTranslatorRegistrar( std::string(*translateFunction)( T& ) ) {
        ^
src/kOrganizify/Test/catch.hpp:3024:13: style: Class 'ExceptionTranslator' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
            ExceptionTranslator( std::string(*translateFunction)( T& ) )
            ^
src/kOrganizify/Test/catch.hpp:3401:5: style: Class 'ExceptionMessageMatcher' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
    ExceptionMessageMatcher(std::string const& message):
    ^
src/kOrganizify/Test/catch.hpp:3555:13: style: Struct 'EqualsMatcher' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
            EqualsMatcher( CasedString const& comparator );
            ^
src/kOrganizify/Test/catch.hpp:3559:13: style: Struct 'ContainsMatcher' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
            ContainsMatcher( CasedString const& comparator );
            ^
src/kOrganizify/Test/catch.hpp:3563:13: style: Struct 'StartsWithMatcher' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
            StartsWithMatcher( CasedString const& comparator );
            ^
src/kOrganizify/Test/catch.hpp:3567:13: style: Struct 'EndsWithMatcher' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
            EndsWithMatcher( CasedString const& comparator );
            ^
src/kOrganizify/Test/catch.hpp:3607:13: style: Struct 'ContainsElementMatcher' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
            ContainsElementMatcher(T const &comparator) : m_comparator( comparator) {}
            ^
src/kOrganizify/Test/catch.hpp:3628:13: style: Struct 'ContainsMatcher' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
            ContainsMatcher(std::vector<T, AllocComp> const &comparator) : m_comparator( comparator ) {}
            ^
src/kOrganizify/Test/catch.hpp:3658:13: style: Struct 'EqualsMatcher' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
            EqualsMatcher(std::vector<T, AllocComp> const &comparator) : m_comparator( comparator ) {}
            ^
src/kOrganizify/Test/catch.hpp:3681:13: style: Struct 'ApproxMatcher' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
            ApproxMatcher(std::vector<T, AllocComp> const& comparator) : m_comparator( comparator ) {}
            ^
src/kOrganizify/Test/catch.hpp:3716:13: style: Struct 'UnorderedEqualsMatcher' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
            UnorderedEqualsMatcher(std::vector<T, AllocComp> const& target) : m_target(target) {}
            ^
src/kOrganizify/Test/catch.hpp:3921:5: style: Class 'GeneratorException' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
    GeneratorException(const char* msg):
    ^
src/kOrganizify/Test/catch.hpp:3954:9: style: Class 'SingleValueGenerator' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
        SingleValueGenerator(T&& value) : m_value(std::move(value)) {}
        ^
src/kOrganizify/Test/catch.hpp:3987:9: style: Class 'GeneratorWrapper' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
        GeneratorWrapper(std::unique_ptr<IGenerator<T>> generator):
        ^
src/kOrganizify/Test/catch.hpp:4405:9: style: Class 'Option' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
        Option( T const& _value )
        ^
src/kOrganizify/Test/catch.hpp:3356:13: style: Struct 'MatchNotOf < std :: exception >' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
            MatchNotOf( MatcherBase<ArgT> const& underlyingMatcher ) : m_underlyingMatcher( underlyingMatcher ) {}
            ^
src/kOrganizify/Test/catch.hpp:3356:13: style: Struct 'MatchNotOf < std >' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
            MatchNotOf( MatcherBase<ArgT> const& underlyingMatcher ) : m_underlyingMatcher( underlyingMatcher ) {}
            ^
src/kOrganizify/Test/catch.hpp:3356:13: style: Struct 'MatchNotOf < std :: string >' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
            MatchNotOf( MatcherBase<ArgT> const& underlyingMatcher ) : m_underlyingMatcher( underlyingMatcher ) {}
            ^
src/kOrganizify/Test/catch.hpp:2316:34: style: Parameter 'lhs' can be declared as pointer to const [constParameterReference]
    auto compareEqual( T* const& lhs, int rhs ) -> bool { return lhs == reinterpret_cast<void const*>( rhs ); }
                                 ^
src/kOrganizify/Test/catch.hpp:2318:34: style: Parameter 'lhs' can be declared as pointer to const [constParameterReference]
    auto compareEqual( T* const& lhs, long rhs ) -> bool { return lhs == reinterpret_cast<void const*>( rhs ); }
                                 ^
src/kOrganizify/Test/catch.hpp:2320:43: style: Parameter 'rhs' can be declared as pointer to const [constParameterReference]
    auto compareEqual( int lhs, T* const& rhs ) -> bool { return reinterpret_cast<void const*>( lhs ) == rhs; }
                                          ^
src/kOrganizify/Test/catch.hpp:2322:44: style: Parameter 'rhs' can be declared as pointer to const [constParameterReference]
    auto compareEqual( long lhs, T* const& rhs ) -> bool { return reinterpret_cast<void const*>( lhs ) == rhs; }
                                           ^
src/kOrganizify/Test/catch.hpp:2327:37: style: Parameter 'lhs' can be declared as pointer to const [constParameterReference]
    auto compareNotEqual( T* const& lhs, int rhs ) -> bool { return lhs != reinterpret_cast<void const*>( rhs ); }
                                    ^
src/kOrganizify/Test/catch.hpp:2329:37: style: Parameter 'lhs' can be declared as pointer to const [constParameterReference]
    auto compareNotEqual( T* const& lhs, long rhs ) -> bool { return lhs != reinterpret_cast<void const*>( rhs ); }
                                    ^
src/kOrganizify/Test/catch.hpp:2331:46: style: Parameter 'rhs' can be declared as pointer to const [constParameterReference]
    auto compareNotEqual( int lhs, T* const& rhs ) -> bool { return reinterpret_cast<void const*>( lhs ) != rhs; }
                                             ^
src/kOrganizify/Test/catch.hpp:2333:47: style: Parameter 'rhs' can be declared as pointer to const [constParameterReference]
    auto compareNotEqual( long lhs, T* const& rhs ) -> bool { return reinterpret_cast<void const*>( lhs ) != rhs; }
                                              ^
src/kOrganizify/Test/catch.hpp:1485:27: style: Consider using std::transform algorithm instead of a raw loop. [useStlAlgorithm]
                intValues.push_back( static_cast<int>( enumValue ) );
                          ^
src/kOrganizify/Test/catch.hpp:3610:17: style: Consider using std::any_of algorithm instead of a raw loop. [useStlAlgorithm]
                for (auto const& el : v) {
                ^
src/kOrganizify/Test/catch.hpp:3637:47: style: Consider using std::any_of algorithm instead of a raw loop. [useStlAlgorithm]
                        if (el == comparator) {
                                              ^
src/kOrganizify/Test/basicEventTest.cpp:9:34: style: Variable 'actualDuration' is assigned a value that is never used. [unreadVariable]
        const int actualDuration = event.getDuration();
                                 ^
src/kOrganizify/Test/catch.hpp:2055:0: information: Include file: <ctime> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ctime>
^
src/kOrganizify/Test/catch.hpp:2056:0: information: Include file: <ratio> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ratio>
^
src/kOrganizify/Test/catch.hpp:2057:0: information: Include file: <chrono> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <chrono>
^
src/kOrganizify/Test/catch.hpp:4846:0: information: Include file: <string> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <string>
^
src/kOrganizify/Test/catch.hpp:5096:0: information: Include file: <string> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <string>
^
src/kOrganizify/Test/catch.hpp:5097:0: information: Include file: <vector> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <vector>
^
src/kOrganizify/Test/catch.hpp:5098:0: information: Include file: <memory> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <memory>
^
src/kOrganizify/Test/catch.hpp:5174:0: information: Include file: <string> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <string>
^
src/kOrganizify/Test/catch.hpp:5254:0: information: Include file: <memory> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <memory>
^
src/kOrganizify/Test/catch.hpp:5255:0: information: Include file: <vector> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <vector>
^
src/kOrganizify/Test/catch.hpp:5256:0: information: Include file: <string> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <string>
^
src/kOrganizify/Test/catch.hpp:5372:0: information: Include file: <string> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <string>
^
src/kOrganizify/Test/catch.hpp:5465:0: information: Include file: <string> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <string>
^
src/kOrganizify/Test/catch.hpp:5466:0: information: Include file: <iosfwd> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <iosfwd>
^
src/kOrganizify/Test/catch.hpp:5467:0: information: Include file: <map> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <map>
^
src/kOrganizify/Test/catch.hpp:5468:0: information: Include file: <set> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <set>
^
src/kOrganizify/Test/catch.hpp:5469:0: information: Include file: <memory> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <memory>
^
src/kOrganizify/Test/catch.hpp:5470:0: information: Include file: <algorithm> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <algorithm>
^
src/kOrganizify/Test/catch.hpp:5709:0: information: Include file: <algorithm> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <algorithm>
^
src/kOrganizify/Test/catch.hpp:5710:0: information: Include file: <cstring> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <cstring>
^
src/kOrganizify/Test/catch.hpp:5711:0: information: Include file: <cfloat> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <cfloat>
^
src/kOrganizify/Test/catch.hpp:5712:0: information: Include file: <cstdio> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <cstdio>
^
src/kOrganizify/Test/catch.hpp:5713:0: information: Include file: <cassert> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <cassert>
^
src/kOrganizify/Test/catch.hpp:5714:0: information: Include file: <memory> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <memory>
^
src/kOrganizify/Test/catch.hpp:5715:0: information: Include file: <ostream> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ostream>
^
src/kOrganizify/Test/catch.hpp:6215:0: information: Include file: <vector> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <vector>
^
src/kOrganizify/Test/catch.hpp:7464:0: information: Include file: <string> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <string>
^
src/kOrganizify/Test/catch.hpp:7465:0: information: Include file: <vector> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <vector>
^
src/kOrganizify/Test/catch.hpp:7466:0: information: Include file: <memory> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <memory>
^
src/kOrganizify/Test/catch.hpp:7855:0: information: Include file: <cmath> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <cmath>
^
src/kOrganizify/Test/catch.hpp:7856:0: information: Include file: <limits> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <limits>
^
src/kOrganizify/Test/catch.hpp:7992:0: information: Include file: <cassert> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <cassert>
^
src/kOrganizify/Test/catch.hpp:8046:0: information: Include file: <string> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <string>
^
src/kOrganizify/Test/catch.hpp:8458:0: information: Include file: <cassert> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <cassert>
^
src/kOrganizify/Test/catch.hpp:8459:0: information: Include file: <ostream> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ostream>
^
src/kOrganizify/Test/catch.hpp:8460:0: information: Include file: <sstream> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <sstream>
^
src/kOrganizify/Test/catch.hpp:8461:0: information: Include file: <vector> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <vector>
^
src/kOrganizify/Test/catch.hpp:8787:0: information: Include file: <cctype> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <cctype>
^
src/kOrganizify/Test/catch.hpp:8788:0: information: Include file: <string> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <string>
^
src/kOrganizify/Test/catch.hpp:8789:0: information: Include file: <memory> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <memory>
^
src/kOrganizify/Test/catch.hpp:8790:0: information: Include file: <set> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <set>
^
src/kOrganizify/Test/catch.hpp:8791:0: information: Include file: <algorithm> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <algorithm>
^
src/kOrganizify/Test/catch.hpp:9692:0: information: Include file: <fstream> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <fstream>
^
src/kOrganizify/Test/catch.hpp:9693:0: information: Include file: <ctime> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ctime>
^
src/kOrganizify/Test/catch.hpp:9910:0: information: Include file: <cstring> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <cstring>
^
src/kOrganizify/Test/catch.hpp:9911:0: information: Include file: <ostream> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ostream>
^
src/kOrganizify/Test/catch.hpp:10072:0: information: Include file: <sstream> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <sstream>
^
src/kOrganizify/Test/catch.hpp:10169:0: information: Include file: <unistd.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <unistd.h>
^
src/kOrganizify/Test/catch.hpp:10355:0: information: Include file: <string> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <string>
^
src/kOrganizify/Test/catch.hpp:10519:0: information: Include file: <stdexcept> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <stdexcept>
^
src/kOrganizify/Test/catch.hpp:10551:0: information: Include file: <vector> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <vector>
^
src/kOrganizify/Test/catch.hpp:10552:0: information: Include file: <memory> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <memory>
^
src/kOrganizify/Test/catch.hpp:10575:0: information: Include file: <map> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <map>
^
src/kOrganizify/Test/catch.hpp:10576:0: information: Include file: <cassert> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <cassert>
^
src/kOrganizify/Test/catch.hpp:10642:0: information: Include file: <cerrno> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <cerrno>
^
src/kOrganizify/Test/catch.hpp:10653:0: information: Include file: <vector> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <vector>
^
src/kOrganizify/Test/catch.hpp:10654:0: information: Include file: <string> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <string>
^
src/kOrganizify/Test/catch.hpp:10655:0: information: Include file: <memory> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <memory>
^
src/kOrganizify/Test/catch.hpp:10750:0: information: Include file: <algorithm> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <algorithm>
^
src/kOrganizify/Test/catch.hpp:10857:0: information: Include file: <signal.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <signal.h>
^
src/kOrganizify/Test/catch.hpp:10960:0: information: Include file: <limits> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <limits>
^
src/kOrganizify/Test/catch.hpp:10961:0: information: Include file: <set> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <set>
^
src/kOrganizify/Test/catch.hpp:11212:0: information: Include file: <set> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <set>
^
src/kOrganizify/Test/catch.hpp:11244:0: information: Include file: <limits> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <limits>
^
src/kOrganizify/Test/catch.hpp:11245:0: information: Include file: <algorithm> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <algorithm>
^
src/kOrganizify/Test/catch.hpp:11246:0: information: Include file: <iomanip> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <iomanip>
^
src/kOrganizify/Test/catch.hpp:11452:0: information: Include file: <string> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <string>
^
src/kOrganizify/Test/catch.hpp:11468:0: information: Include file: <algorithm> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <algorithm>
^
src/kOrganizify/Test/catch.hpp:11469:0: information: Include file: <cmath> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <cmath>
^
src/kOrganizify/Test/catch.hpp:11470:0: information: Include file: <cstdlib> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <cstdlib>
^
src/kOrganizify/Test/catch.hpp:11471:0: information: Include file: <cstdint> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <cstdint>
^
src/kOrganizify/Test/catch.hpp:11472:0: information: Include file: <cstring> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <cstring>
^
src/kOrganizify/Test/catch.hpp:11473:0: information: Include file: <sstream> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <sstream>
^
src/kOrganizify/Test/catch.hpp:11474:0: information: Include file: <type_traits> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <type_traits>
^
src/kOrganizify/Test/catch.hpp:11475:0: information: Include file: <iomanip> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <iomanip>
^
src/kOrganizify/Test/catch.hpp:11476:0: information: Include file: <limits> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <limits>
^
src/kOrganizify/Test/catch.hpp:11699:0: information: Include file: <regex> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <regex>
^
src/kOrganizify/Test/catch.hpp:11808:0: information: Include file: <cassert> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <cassert>
^
src/kOrganizify/Test/catch.hpp:11809:0: information: Include file: <stack> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <stack>
^
src/kOrganizify/Test/catch.hpp:11941:0: information: Include file: <cstdio> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <cstdio>
^
src/kOrganizify/Test/catch.hpp:11942:0: information: Include file: <iosfwd> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <iosfwd>
^
src/kOrganizify/Test/catch.hpp:11943:0: information: Include file: <string> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <string>
^
src/kOrganizify/Test/catch.hpp:12044:0: information: Include file: <cstdio> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <cstdio>
^
src/kOrganizify/Test/catch.hpp:12045:0: information: Include file: <cstring> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <cstring>
^
src/kOrganizify/Test/catch.hpp:12046:0: information: Include file: <fstream> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <fstream>
^
src/kOrganizify/Test/catch.hpp:12047:0: information: Include file: <sstream> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <sstream>
^
src/kOrganizify/Test/catch.hpp:12048:0: information: Include file: <stdexcept> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <stdexcept>
^
src/kOrganizify/Test/catch.hpp:12182:0: information: Include file: <cmath> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <cmath>
^
src/kOrganizify/Test/catch.hpp:12271:0: information: Include file: <vector> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <vector>
^
src/kOrganizify/Test/catch.hpp:12272:0: information: Include file: <set> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <set>
^
src/kOrganizify/Test/catch.hpp:12273:0: information: Include file: <algorithm> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <algorithm>
^
src/kOrganizify/Test/catch.hpp:12274:0: information: Include file: <ios> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ios>
^
src/kOrganizify/Test/catch.hpp:12327:0: information: Include file: <map> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <map>
^
src/kOrganizify/Test/catch.hpp:12356:0: information: Include file: <string> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <string>
^
src/kOrganizify/Test/catch.hpp:12370:0: information: Include file: <map> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <map>
^
src/kOrganizify/Test/catch.hpp:12390:0: information: Include file: <vector> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <vector>
^
src/kOrganizify/Test/catch.hpp:12391:0: information: Include file: <exception> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <exception>
^
src/kOrganizify/Test/catch.hpp:12574:0: information: Include file: <cassert> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <cassert>
^
src/kOrganizify/Test/catch.hpp:12575:0: information: Include file: <algorithm> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <algorithm>
^
src/kOrganizify/Test/catch.hpp:12576:0: information: Include file: <sstream> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <sstream>
^
src/kOrganizify/Test/catch.hpp:13205:0: information: Include file: <memory> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <memory>
^
src/kOrganizify/Test/catch.hpp:13255:0: information: Include file: <iosfwd> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <iosfwd>
^
src/kOrganizify/Test/catch.hpp:13284:0: information: Include file: <cstdlib> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <cstdlib>
^
src/kOrganizify/Test/catch.hpp:13285:0: information: Include file: <iomanip> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <iomanip>
^
src/kOrganizify/Test/catch.hpp:13286:0: information: Include file: <set> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <set>
^
src/kOrganizify/Test/catch.hpp:13287:0: information: Include file: <iterator> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <iterator>
^
src/kOrganizify/Test/catch.hpp:13575:0: information: Include file: <vector> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <vector>
^
src/kOrganizify/Test/catch.hpp:13625:0: information: Include file: <cstdio> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <cstdio>
^
src/kOrganizify/Test/catch.hpp:13626:0: information: Include file: <iostream> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <iostream>
^
src/kOrganizify/Test/catch.hpp:13627:0: information: Include file: <fstream> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <fstream>
^
src/kOrganizify/Test/catch.hpp:13628:0: information: Include file: <sstream> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <sstream>
^
src/kOrganizify/Test/catch.hpp:13629:0: information: Include file: <vector> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <vector>
^
src/kOrganizify/Test/catch.hpp:13630:0: information: Include file: <memory> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <memory>
^
src/kOrganizify/Test/catch.hpp:13796:0: information: Include file: <algorithm> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <algorithm>
^
src/kOrganizify/Test/catch.hpp:13797:0: information: Include file: <ostream> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ostream>
^
src/kOrganizify/Test/catch.hpp:13798:0: information: Include file: <cstring> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <cstring>
^
src/kOrganizify/Test/catch.hpp:13799:0: information: Include file: <cctype> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <cctype>
^
src/kOrganizify/Test/catch.hpp:13800:0: information: Include file: <vector> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <vector>
^
src/kOrganizify/Test/catch.hpp:13898:0: information: Include file: <algorithm> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <algorithm>
^
src/kOrganizify/Test/catch.hpp:13899:0: information: Include file: <ostream> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ostream>
^
src/kOrganizify/Test/catch.hpp:13900:0: information: Include file: <cstring> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <cstring>
^
src/kOrganizify/Test/catch.hpp:13901:0: information: Include file: <cstdint> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <cstdint>
^
src/kOrganizify/Test/catch.hpp:13962:0: information: Include file: <sstream> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <sstream>
^
src/kOrganizify/Test/catch.hpp:14009:0: information: Include file: <cctype> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <cctype>
^
src/kOrganizify/Test/catch.hpp:14010:0: information: Include file: <exception> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <exception>
^
src/kOrganizify/Test/catch.hpp:14011:0: information: Include file: <algorithm> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <algorithm>
^
src/kOrganizify/Test/catch.hpp:14012:0: information: Include file: <sstream> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <sstream>
^
src/kOrganizify/Test/catch.hpp:14182:0: information: Include file: <algorithm> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <algorithm>
^
src/kOrganizify/Test/catch.hpp:14183:0: information: Include file: <sstream> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <sstream>
^
src/kOrganizify/Test/catch.hpp:14341:0: information: Include file: <algorithm> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <algorithm>
^
src/kOrganizify/Test/catch.hpp:14342:0: information: Include file: <cassert> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <cassert>
^
src/kOrganizify/Test/catch.hpp:14343:0: information: Include file: <stdexcept> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <stdexcept>
^
src/kOrganizify/Test/catch.hpp:14344:0: information: Include file: <memory> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <memory>
^
src/kOrganizify/Test/catch.hpp:14345:0: information: Include file: <sstream> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <sstream>
^
src/kOrganizify/Test/catch.hpp:14610:0: information: Include file: <algorithm> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <algorithm>
^
src/kOrganizify/Test/catch.hpp:14611:0: information: Include file: <string> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <string>
^
src/kOrganizify/Test/catch.hpp:14612:0: information: Include file: <vector> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <vector>
^
src/kOrganizify/Test/catch.hpp:14613:0: information: Include file: <memory> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <memory>
^
src/kOrganizify/Test/catch.hpp:14929:0: information: Include file: <chrono> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <chrono>
^
src/kOrganizify/Test/catch.hpp:15006:0: information: Include file: <cmath> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <cmath>
^
src/kOrganizify/Test/catch.hpp:15007:0: information: Include file: <iomanip> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <iomanip>
^
src/kOrganizify/Test/catch.hpp:15320:0: information: Include file: <exception> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <exception>
^
src/kOrganizify/Test/catch.hpp:15337:0: information: Include file: <exception> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <exception>
^
src/kOrganizify/Test/catch.hpp:15353:0: information: Include file: <ostream> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ostream>
^
src/kOrganizify/Test/catch.hpp:15430:0: information: Include file: <iomanip> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <iomanip>
^
src/kOrganizify/Test/catch.hpp:15431:0: information: Include file: <type_traits> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <type_traits>
^
src/kOrganizify/Test/catch.hpp:15754:0: information: Include file: <cstring> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <cstring>
^
src/kOrganizify/Test/catch.hpp:15755:0: information: Include file: <cfloat> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <cfloat>
^
src/kOrganizify/Test/catch.hpp:15756:0: information: Include file: <cstdio> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <cstdio>
^
src/kOrganizify/Test/catch.hpp:15757:0: information: Include file: <cassert> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <cassert>
^
src/kOrganizify/Test/catch.hpp:15758:0: information: Include file: <memory> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <memory>
^
src/kOrganizify/Test/catch.hpp:16108:0: information: Include file: <cfloat> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <cfloat>
^
src/kOrganizify/Test/catch.hpp:16109:0: information: Include file: <cstdio> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <cstdio>
^
src/kOrganizify/Test/catch.hpp:16792:0: information: Include file: <cassert> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <cassert>
^
src/kOrganizify/Test/catch.hpp:16793:0: information: Include file: <sstream> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <sstream>
^
src/kOrganizify/Test/catch.hpp:16794:0: information: Include file: <ctime> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <ctime>
^
src/kOrganizify/Test/catch.hpp:16795:0: information: Include file: <algorithm> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <algorithm>
^
src/kOrganizify/Test/catch.hpp:16796:0: information: Include file: <iomanip> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <iomanip>
^
src/kOrganizify/Test/catch.hpp:17078:0: information: Include file: <cassert> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <cassert>
^
src/kOrganizify/Test/catch.hpp:4872:20: error: syntax error: =[...]; [syntaxError]
            id obj = [[m_cls alloc] init];
                   ^
src/kOrganizify/Test/calendarTest.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 109 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/kOrganizify/kOrganizify/src/event.h:31:13: warning: The class 'Event' defines member function with name 'getTitle' also defined in its parent class 'BasicEvent'. [duplInheritedMember]
    QString getTitle() const;
            ^
src/kOrganizify/kOrganizify/src/basicevent.h:12:13: note: Parent function 'BasicEvent::getTitle'
    QString getTitle() const;
            ^
src/kOrganizify/kOrganizify/src/event.h:31:13: note: Derived function 'Event::getTitle'
    QString getTitle() const;
            ^
src/kOrganizify/kOrganizify/src/event.h:32:10: warning: The class 'Event' defines member function with name 'setTitle' also defined in its parent class 'BasicEvent'. [duplInheritedMember]
    void setTitle(const QString &title);
         ^
src/kOrganizify/kOrganizify/src/basicevent.h:13:10: note: Parent function 'BasicEvent::setTitle'
    void setTitle(const QString &title);
         ^
src/kOrganizify/kOrganizify/src/event.h:32:10: note: Derived function 'Event::setTitle'
    void setTitle(const QString &title);
         ^
src/kOrganizify/kOrganizify/src/event.h:34:9: warning: The class 'Event' defines member function with name 'getDuration' also defined in its parent class 'BasicEvent'. [duplInheritedMember]
    int getDuration() const;
        ^
src/kOrganizify/kOrganizify/src/basicevent.h:15:9: note: Parent function 'BasicEvent::getDuration'
    int getDuration() const;
        ^
src/kOrganizify/kOrganizify/src/event.h:34:9: note: Derived function 'Event::getDuration'
    int getDuration() const;
        ^
src/kOrganizify/kOrganizify/src/event.h:35:11: warning: The class 'Event' defines member function with name 'setDuration' also defined in its parent class 'BasicEvent'. [duplInheritedMember]
    void  setDuration(const int duration);
          ^
src/kOrganizify/kOrganizify/src/basicevent.h:16:10: note: Parent function 'BasicEvent::setDuration'
    void setDuration(const int duration);
         ^
src/kOrganizify/kOrganizify/src/event.h:35:11: note: Derived function 'Event::setDuration'
    void  setDuration(const int duration);
          ^
src/kOrganizify/kOrganizify/src/calendar.h:25:10: warning: The class 'Calendar' defines member function with name 'loadData' also defined in its parent class 'SaveLoad'. [duplInheritedMember]
    void loadData(const QString &username);
         ^
src/kOrganizify/kOrganizify/src/saveload.h:16:10: note: Parent function 'SaveLoad::loadData'
    void loadData(const QString &username);
         ^
src/kOrganizify/kOrganizify/src/calendar.h:25:10: note: Derived function 'Calendar::loadData'
    void loadData(const QString &username);
         ^
src/kOrganizify/kOrganizify/src/calendar.h:26:10: warning: The class 'Calendar' defines member function with name 'saveData' also defined in its parent class 'SaveLoad'. [duplInheritedMember]
    void saveData(const QString &username);
         ^
src/kOrganizify/kOrganizify/src/saveload.h:15:10: note: Parent function 'SaveLoad::saveData'
    void saveData(const QString &username);
         ^
src/kOrganizify/kOrganizify/src/calendar.h:26:10: note: Derived function 'Calendar::saveData'
    void saveData(const QString &username);
         ^
src/kOrganizify/kOrganizify/src/event.h:26:5: style: Class 'Event' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
    Event(const BasicEvent &basicEvent);
    ^
src/kOrganizify/Test/eventTest.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 109 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/kOrganizify/Test/main.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 108 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/kOrganizify/Test/main.cpp:3:0: information: Include file: <QCoreApplication> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <QCoreApplication>
^
src/kOrganizify/kOrganizify/src/task.h:3:0: information: Include file: <QString> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <QString>
^
src/kOrganizify/Test/catch.hpp:8193:21: warning: inconclusive: Member variable 'LazyExpression::m_transientExpression' is not assigned in the copy constructor. Should it be copied? [missingMemberCopy]
    LazyExpression::LazyExpression( LazyExpression const& other ) : m_isNegated( other.m_isNegated ) {}
                    ^
src/kOrganizify/Test/catch.hpp:4404:9: warning: Member variable 'Option < AssertionResult >::storage' is not initialized in the constructor. [uninitMemberVar]
        Option() : nullableValue( nullptr ) {}
        ^
src/kOrganizify/Test/catch.hpp:4405:9: warning: Member variable 'Option < AssertionResult >::storage' is not initialized in the constructor. [uninitMemberVar]
        Option( T const& _value )
        ^
src/kOrganizify/Test/catch.hpp:4408:9: warning: Member variable 'Option < AssertionResult >::storage' is not initialized in the copy constructor. [uninitMemberVar]
        Option( Option const& _other )
        ^
src/kOrganizify/Test/catch.hpp:4404:9: warning: Member variable 'Option < unsigned long >::storage' is not initialized in the constructor. [uninitMemberVar]
        Option() : nullableValue( nullptr ) {}
        ^
src/kOrganizify/Test/catch.hpp:4405:9: warning: Member variable 'Option < unsigned long >::storage' is not initialized in the constructor. [uninitMemberVar]
        Option( T const& _value )
        ^
src/kOrganizify/Test/catch.hpp:4408:9: warning: Member variable 'Option < unsigned long >::storage' is not initialized in the copy constructor. [uninitMemberVar]
        Option( Option const& _other )
        ^
src/kOrganizify/Test/catch.hpp:9298:21: style: Unused private function: 'ExeName::makeRef' [unusedPrivateFunction]
        static auto makeRef(LambdaT const &lambda) -> std::shared_ptr<BoundValueRefBase> {
                    ^
src/kOrganizify/Test/catch.hpp:2582:14: performance: inconclusive: Technically the member function 'Catch::AssertionHandler::allowThrows' can be static (but you may consider moving to unnamed namespace). [functionStatic]
        auto allowThrows() const -> bool;
             ^
src/kOrganizify/Test/catch.hpp:8231:28: note: Technically the member function 'Catch::AssertionHandler::allowThrows' can be static (but you may consider moving to unnamed namespace).
    auto AssertionHandler::allowThrows() const -> bool {
                           ^
src/kOrganizify/Test/catch.hpp:2582:14: note: Technically the member function 'Catch::AssertionHandler::allowThrows' can be static (but you may consider moving to unnamed namespace).
        auto allowThrows() const -> bool;
             ^
src/kOrganizify/Test/catch.hpp:5359:24: style: inconclusive: Technically the member function 'Catch::Config::openStream' can be const. [functionConst]
        IStream const* openStream();
                       ^
src/kOrganizify/Test/catch.hpp:10014:28: note: Technically the member function 'Catch::Config::openStream' can be const.
    IStream const* Config::openStream() {
                           ^
src/kOrganizify/Test/catch.hpp:5359:24: note: Technically the member function 'Catch::Config::openStream' can be const.
        IStream const* openStream();
                       ^
src/kOrganizify/Test/catch.hpp:8010:14: performance: inconclusive: Technically the member function 'Catch::FatalConditionHandler::engage_platform' can be static (but you may consider moving to unnamed namespace). [functionStatic]
        void engage_platform();
             ^
src/kOrganizify/Test/catch.hpp:10931:33: note: Technically the member function 'Catch::FatalConditionHandler::engage_platform' can be static (but you may consider moving to unnamed namespace).
    void FatalConditionHandler::engage_platform() {
                                ^
src/kOrganizify/Test/catch.hpp:8010:14: note: Technically the member function 'Catch::FatalConditionHandler::engage_platform' can be static (but you may consider moving to unnamed namespace).
        void engage_platform();
             ^
src/kOrganizify/Test/catch.hpp:8011:14: performance: inconclusive: Technically the member function 'Catch::FatalConditionHandler::disengage_platform' can be static (but you may consider moving to unnamed namespace). [functionStatic]
        void disengage_platform();
             ^
src/kOrganizify/Test/catch.hpp:10950:33: note: Technically the member function 'Catch::FatalConditionHandler::disengage_platform' can be static (but you may consider moving to unnamed namespace).
    void FatalConditionHandler::disengage_platform() {
                                ^
src/kOrganizify/Test/catch.hpp:8011:14: note: Technically the member function 'Catch::FatalConditionHandler::disengage_platform' can be static (but you may consider moving to unnamed namespace).
        void disengage_platform();
             ^
src/kOrganizify/Test/catch.hpp:8148:14: style: inconclusive: Technically the member function 'Catch::RunContext::populateReaction' can be const. [functionConst]
        void populateReaction( AssertionReaction& reaction );
             ^
src/kOrganizify/Test/catch.hpp:13110:22: note: Technically the member function 'Catch::RunContext::populateReaction' can be const.
    void RunContext::populateReaction( AssertionReaction& reaction ) {
                     ^
src/kOrganizify/Test/catch.hpp:8148:14: note: Technically the member function 'Catch::RunContext::populateReaction' can be const.
        void populateReaction( AssertionReaction& reaction );
             ^
src/kOrganizify/Test/catch.hpp:8646:10: style: inconclusive: Technically the member function 'Catch::clara::TextFlow::Column::operator+' can be const. [functionConst]
    auto operator + (Column const& other)->Columns;
         ^
src/kOrganizify/Test/catch.hpp:8773:21: note: Technically the member function 'Catch::clara::TextFlow::Column::operator+' can be const.
inline auto Column::operator + (Column const& other) -> Columns {
                    ^
src/kOrganizify/Test/catch.hpp:8646:10: note: Technically the member function 'Catch::clara::TextFlow::Column::operator+' can be const.
    auto operator + (Column const& other)->Columns;
         ^
src/kOrganizify/Test/catch.hpp:8747:10: style: inconclusive: Technically the member function 'Catch::clara::TextFlow::Columns::operator+' can be const. [functionConst]
    auto operator + (Column const& col) -> Columns {
         ^
src/kOrganizify/Test/catch.hpp:10207:14: performance: inconclusive: Technically the member function 'Catch::::PosixColourImpl::setColour' can be static (but you may consider moving to unnamed namespace). [functionStatic]
        void setColour( const char* _escapeCode ) {
             ^
src/kOrganizify/Test/catch.hpp:10664:21: performance: inconclusive: Technically the member function 'Catch::ExceptionTranslatorRegistry::tryTranslators' can be static (but you may consider moving to unnamed namespace). [functionStatic]
        std::string tryTranslators() const;
                    ^
src/kOrganizify/Test/catch.hpp:10741:46: note: Technically the member function 'Catch::ExceptionTranslatorRegistry::tryTranslators' can be static (but you may consider moving to unnamed namespace).
    std::string ExceptionTranslatorRegistry::tryTranslators() const {
                                             ^
src/kOrganizify/Test/catch.hpp:10664:21: note: Technically the member function 'Catch::ExceptionTranslatorRegistry::tryTranslators' can be static (but you may consider moving to unnamed namespace).
        std::string tryTranslators() const;
                    ^
src/kOrganizify/Test/catch.hpp:13216:14: performance: inconclusive: Technically the member function 'Catch::Session::libIdentify' can be static (but you may consider moving to unnamed namespace). [functionStatic]
        void libIdentify();
             ^
src/kOrganizify/Test/catch.hpp:13442:19: note: Technically the member function 'Catch::Session::libIdentify' can be static (but you may consider moving to unnamed namespace).
    void Session::libIdentify() {
                  ^
src/kOrganizify/Test/catch.hpp:13216:14: note: Technically the member function 'Catch::Session::libIdentify' can be static (but you may consider moving to unnamed namespace).
        void libIdentify();
             ^
src/kOrganizify/Test/catch.hpp:13677:18: style: inconclusive: Technically the member function 'Catch::Detail::::OutputDebugWriter::operator()' can be const. [functionConst]
            void operator()( std::string const&str ) {
                 ^
src/kOrganizify/Test/catch.hpp:15814:48: warning: The struct 'TestEventListenerBase' defines member function with name 'getSupportedVerbosities' also defined in its parent struct 'StreamingReporterBase < TestEventListenerBase >'. [duplInheritedMember]
    std::set<Verbosity> TestEventListenerBase::getSupportedVerbosities() {
                                               ^
src/kOrganizify/Test/catch.hpp:5744:36: note: Parent function 'StreamingReporterBase < TestEventListenerBase >::getSupportedVerbosities'
        static std::set<Verbosity> getSupportedVerbosities() {
                                   ^
src/kOrganizify/Test/catch.hpp:15814:48: note: Derived function 'TestEventListenerBase::getSupportedVerbosities'
    std::set<Verbosity> TestEventListenerBase::getSupportedVerbosities() {
                                               ^
src/kOrganizify/Test/catch.hpp:5210:9: style: Class 'TestSpecParser' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
        TestSpecParser( ITagAliasRegistry const& tagAliases );
        ^
src/kOrganizify/Test/catch.hpp:5314:9: style: Class 'Config' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
        Config( ConfigData const& data );
        ^
src/kOrganizify/Test/catch.hpp:5507:9: style: Struct 'TestRunInfo' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
        TestRunInfo( std::string const& _name );
        ^
src/kOrganizify/Test/catch.hpp:5577:9: style: Struct 'TestGroupStats' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
        TestGroupStats( GroupInfo const& _groupInfo );
        ^
src/kOrganizify/Test/catch.hpp:5968:9: style: Struct 'TestEventListenerBase' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
        TestEventListenerBase( ReporterConfig const& _config );
        ^
src/kOrganizify/Test/catch.hpp:6021:9: style: Struct 'Colour' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
        Colour( Code _colourCode );
        ^
src/kOrganizify/Test/catch.hpp:6151:9: style: Struct 'ConsoleReporter' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
        ConsoleReporter(ReporterConfig const& config);
        ^
src/kOrganizify/Test/catch.hpp:6231:9: style: Class 'XmlEncode' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
        XmlEncode( std::string const& str, ForWhat forWhat = ForTextNodes );
        ^
src/kOrganizify/Test/catch.hpp:6267:9: style: Class 'XmlWriter' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
        XmlWriter( std::ostream& os = Catch::cout() );
        ^
src/kOrganizify/Test/catch.hpp:6322:9: style: Class 'JunitReporter' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
        JunitReporter(ReporterConfig const& _config);
        ^
src/kOrganizify/Test/catch.hpp:6371:9: style: Class 'XmlReporter' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
        XmlReporter(ReporterConfig const& _config);
        ^
src/kOrganizify/Test/catch.hpp:8034:9: style: Class 'FatalConditionHandlerGuard' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
        FatalConditionHandlerGuard(FatalConditionHandler* handler):
        ^
src/kOrganizify/Test/catch.hpp:9471:9: style: Struct 'Help' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
        Help( bool &showHelpFlag )
        ^
src/kOrganizify/Test/catch.hpp:12313:9: style: Class 'TestInvokerAsFunction' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
        TestInvokerAsFunction( void(*testAsFunction)() ) noexcept;
        ^
src/kOrganizify/Test/catch.hpp:13687:13: style: Class 'FileStream' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
            FileStream( StringRef filename ) {
            ^
src/kOrganizify/kOrganizify/src/task.h:13:5: style: Class 'Task' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
    Task(QString name);
    ^
src/kOrganizify/Test/catch.hpp:5832:13: style: Struct 'BySectionInfo' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
            BySectionInfo( SectionInfo const& other ) : m_other( other ) {}
            ^
src/kOrganizify/Test/catch.hpp:5731:9: style: Struct 'StreamingReporterBase < TestEventListenerBase >' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
        StreamingReporterBase( ReporterConfig const& _config )
        ^
src/kOrganizify/Test/catch.hpp:5731:9: style: Struct 'StreamingReporterBase < CompactReporter >' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
        StreamingReporterBase( ReporterConfig const& _config )
        ^
src/kOrganizify/Test/catch.hpp:5731:9: style: Struct 'StreamingReporterBase < ConsoleReporter >' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
        StreamingReporterBase( ReporterConfig const& _config )
        ^
src/kOrganizify/Test/catch.hpp:5731:9: style: Struct 'StreamingReporterBase < XmlReporter >' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
        StreamingReporterBase( ReporterConfig const& _config )
        ^
src/kOrganizify/Test/catch.hpp:4405:9: style: Class 'Option < AssertionResult >' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
        Option( T const& _value )
        ^
src/kOrganizify/Test/catch.hpp:4405:9: style: Class 'Option < unsigned long >' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
        Option( T const& _value )
        ^
src/kOrganizify/Test/catch.hpp:8954:9: style: Class 'ResultValueBase < ParseResultType >' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
        ResultValueBase( Type type ) : ResultBase( type ) {}
        ^
src/kOrganizify/Test/catch.hpp:8954:9: style: Class 'ResultValueBase < ParseState >' has a constructor with 1 argument that is not explicit. [noExplicitConstructor]
        ResultValueBase( Type type ) : ResultBase( type ) {}
        ^
src/kOrganizify/Test/catch.hpp:9118:22: style: The function 'isFlag' overrides a function in a base class but is not marked with a 'override' specifier. [missingOverride]
        virtual auto isFlag() const -> bool { return true; }
                     ^
src/kOrganizify/Test/catch.hpp:9111:22: note: Virtual function in base class
        virtual auto isFlag() const -> bool { return false; }
                     ^
src/kOrganizify/Test/catch.hpp:9118:22: note: Function in derived class
        virtual auto isFlag() const -> bool { return true; }
                     ^
src/kOrganizify/Test/catch.hpp:5752:14: style: The function 'reportInvalidArguments' overrides a function in a base class but is identical to the overridden function [uselessOverride]
        void reportInvalidArguments(std::string const&) override {}
             ^
src/kOrganizify/Test/catch.hpp:5655:22: note: Virtual function in base class
        virtual void reportInvalidArguments(std::string const&) {}
                     ^
src/kOrganizify/Test/catch.hpp:5752:14: note: Function in derived class
        void reportInvalidArguments(std::string const&) override {}
             ^
src/kOrganizify/Test/catch.hpp:16514:9: style: The statement 'if (m_headerPrinted) m_headerPrinted=false' is logically equivalent to 'm_headerPrinted=false'. [duplicateConditionalAssign]
    if (m_headerPrinted) {
        ^
src/kOrganizify/Test/catch.hpp:16515:25: note: Assignment 'm_headerPrinted=false'
        m_headerPrinted = false;
                        ^
src/kOrganizify/Test/catch.hpp:16514:9: note: Condition 'm_headerPrinted' is redundant
    if (m_headerPrinted) {
        ^
src/kOrganizify/Test/catch.hpp:11856:14: style: Condition '!uncaught_exceptions()' is always true [knownConditionTrueFalse]
        if ( !uncaught_exceptions() && !m_moved ){
             ^
src/kOrganizify/Test/catch.hpp:11856:34: note: Calling function 'uncaught_exceptions' returns 0
        if ( !uncaught_exceptions() && !m_moved ){
                                 ^
src/kOrganizify/Test/catch.hpp:11856:14: note: Condition '!uncaught_exceptions()' is always true
        if ( !uncaught_exceptions() && !m_moved ){
             ^
src/kOrganizify/Test/catch.hpp:11919:14: style: Condition '!uncaught_exceptions()' is always true [knownConditionTrueFalse]
        if ( !uncaught_exceptions() ){
             ^
src/kOrganizify/Test/catch.hpp:11919:34: note: Calling function 'uncaught_exceptions' returns 0
        if ( !uncaught_exceptions() ){
                                 ^
src/kOrganizify/Test/catch.hpp:11919:14: note: Condition '!uncaught_exceptions()' is always true
        if ( !uncaught_exceptions() ){
             ^
src/kOrganizify/Test/catch.hpp:15026:24: style: Condition 'value' is always true [knownConditionTrueFalse]
                return value ? Little : Big;
                       ^
src/kOrganizify/Test/catch.hpp:15022:27: note: Assignment 'one=1', assigned value is 1
                int one = 1;
                          ^
src/kOrganizify/Test/catch.hpp:15025:30: note: Assignment 'value=*reinterpret_cast<char*>(&one)', assigned value is 1
                auto value = *reinterpret_cast<char*>(&one);
                             ^
src/kOrganizify/Test/catch.hpp:15026:24: note: Condition 'value' is always true
                return value ? Little : Big;
                       ^
src/kOrganizify/Test/catch.hpp:15034:33: style: Condition 'Endianness::which()==Endianness::Little' is always true [knownConditionTrueFalse]
        if( Endianness::which() == Endianness::Little ) {
                                ^
src/kOrganizify/Test/catch.hpp:15034:30: note: Calling function 'which' returns 1
        if( Endianness::which() == Endianness::Little ) {
                             ^
src/kOrganizify/Test/catch.hpp:15034:33: note: Condition 'Endianness::which()==Endianness::Little' is always true
        if( Endianness::which() == Endianness::Little ) {
                                ^
src/kOrganizify/Test/catch.hpp:15575:27: style: Condition '0x80<=value' is always true [knownConditionTrueFalse]
                    (0x80 <= value && value < 0x800   && encBytes > 2) ||
                          ^
src/kOrganizify/Test/catch.hpp:15574:28: note: Assuming that condition 'value<0x80' is not redundant
                    (value < 0x80) ||
                           ^
src/kOrganizify/Test/catch.hpp:15575:27: note: Condition '0x80<=value' is always true
                    (0x80 <= value && value < 0x800   && encBytes > 2) ||
                          ^
src/kOrganizify/Test/catch.hpp:12660:30: warning: Either the condition 'parent' is redundant or there is possible null pointer dereference: parent. [nullPointerRedundantCheck]
                    while ( !parent->isSectionTracker() ) {
                             ^
src/kOrganizify/Test/catch.hpp:12663:29: note: Assuming that condition 'parent' is not redundant
                    assert( parent &&
                            ^
src/kOrganizify/Test/catch.hpp:12660:30: note: Null pointer dereference
                    while ( !parent->isSectionTracker() ) {
                             ^
src/kOrganizify/Test/catch.hpp:7901:35: style: inconclusive: Function 'setMargin' argument 1 names different: declaration 'margin' definition 'newMargin'. [funcArgNamesDifferent]
    void Approx::setMargin(double newMargin) {
                                  ^
src/kOrganizify/Test/catch.hpp:3081:31: note: Function 'setMargin' argument 1 names different: declaration 'margin' definition 'newMargin'.
        void setMargin(double margin);
                              ^
src/kOrganizify/Test/catch.hpp:7901:35: note: Function 'setMargin' argument 1 names different: declaration 'margin' definition 'newMargin'.
    void Approx::setMargin(double newMargin) {
                                  ^
src/kOrganizify/Test/catch.hpp:7908:36: style: inconclusive: Function 'setEpsilon' argument 1 names different: declaration 'epsilon' definition 'newEpsilon'. [funcArgNamesDifferent]
    void Approx::setEpsilon(double newEpsilon) {
                                   ^
src/kOrganizify/Test/catch.hpp:3084:32: note: Function 'setEpsilon' argument 1 names different: declaration 'epsilon' definition 'newEpsilon'.
        void setEpsilon(double epsilon);
                               ^
src/kOrganizify/Test/catch.hpp:7908:36: note: Function 'setEpsilon' argument 1 names different: declaration 'epsilon' definition 'newEpsilon'.
    void Approx::setEpsilon(double newEpsilon) {
                                   ^
src/kOrganizify/Test/catch.hpp:10631:89: style: inconclusive: Function 'registerEnum' argument 2 names different: declaration 'allEnums' definition 'allValueNames'. [funcArgNamesDifferent]
        EnumInfo const& EnumValuesRegistry::registerEnum( StringRef enumName, StringRef allValueNames, std::vector<int> const& values ) {
                                                                                        ^
src/kOrganizify/Test/catch.hpp:10564:73: note: Function 'registerEnum' argument 2 names different: declaration 'allEnums' definition 'allValueNames'.
            EnumInfo const& registerEnum( StringRef enumName, StringRef allEnums, std::vector<int> const& values) override;
                                                                        ^
src/kOrganizify/Test/catch.hpp:10631:89: note: Function 'registerEnum' argument 2 names different: declaration 'allEnums' definition 'allValueNames'.
        EnumInfo const& EnumValuesRegistry::registerEnum( StringRef enumName, StringRef allValueNames, std::vector<int> const& values ) {
                                                                                        ^
src/kOrganizify/Test/catch.hpp:13916:56: style: inconclusive: Function 'substr' argument 2 names different: declaration 'length' definition 'size'. [funcArgNamesDifferent]
    auto StringRef::substr( size_type start, size_type size ) const noexcept -> StringRef {
                                                       ^
src/kOrganizify/Test/catch.hpp:661:49: note: Function 'substr' argument 2 names different: declaration 'length' definition 'size'.
        auto substr( size_type start, size_type length ) const noexcept -> StringRef;
                                                ^
src/kOrganizify/Test/catch.hpp:13916:56: note: Function 'substr' argument 2 names different: declaration 'length' definition 'size'.
    auto StringRef::substr( size_type start, size_type size ) const noexcept -> StringRef {
                                                       ^
src/kOrganizify/Test/catch.hpp:13928:59: style: inconclusive: Function 'operator<<' argument 2 names different: declaration 'sr' definition 'str'. [funcArgNamesDifferent]
    auto operator << ( std::ostream& os, StringRef const& str ) -> std::ostream& {
                                                          ^
src/kOrganizify/Test/catch.hpp:676:59: note: Function 'operator<<' argument 2 names different: declaration 'sr' definition 'str'.
    auto operator << ( std::ostream& os, StringRef const& sr ) -> std::ostream&;
                                                          ^
src/kOrganizify/Test/catch.hpp:13928:59: note: Function 'operator<<' argument 2 names different: declaration 'sr' definition 'str'.
    auto operator << ( std::ostream& os, StringRef const& str ) -> std::ostream& {
                                                          ^
src/kOrganizify/Test/catch.hpp:13932:57: style: inconclusive: Function 'operator+=' argument 2 names different: declaration 'sr' definition 'rhs'. [funcArgNamesDifferent]
    auto operator+=( std::string& lhs, StringRef const& rhs ) -> std::string& {
                                                        ^
src/kOrganizify/Test/catch.hpp:675:59: note: Function 'operator+=' argument 2 names different: declaration 'sr' definition 'rhs'.
    auto operator += ( std::string& lhs, StringRef const& sr ) -> std::string&;
                                                          ^
src/kOrganizify/Test/catch.hpp:13932:57: note: Function 'operator+=' argument 2 names different: declaration 'sr' definition 'rhs'.
    auto operator+=( std::string& lhs, StringRef const& rhs ) -> std::string& {
                                                        ^
src/kOrganizify/Test/catch.hpp:14045:43: style: inconclusive: Function 'makeTestCase' argument 1 names different: declaration 'testCase' definition '_testCase'. [funcArgNamesDifferent]
    TestCase makeTestCase(  ITestInvoker* _testCase,
                                          ^
src/kOrganizify/Test/catch.hpp:4818:43: note: Function 'makeTestCase' argument 1 names different: declaration 'testCase' definition '_testCase'.
    TestCase makeTestCase(  ITestInvoker* testCase,
                                          ^
src/kOrganizify/Test/catch.hpp:14045:43: note: Function 'makeTestCase' argument 1 names different: declaration 'testCase' definition '_testCase'.
    TestCase makeTestCase(  ITestInvoker* _testCase,
                                          ^
src/kOrganizify/Test/catch.hpp:14046:48: style: inconclusive: Function 'makeTestCase' argument 2 names different: declaration 'className' definition '_className'. [funcArgNamesDifferent]
                            std::string const& _className,
                                               ^
src/kOrganizify/Test/catch.hpp:4819:48: note: Function 'makeTestCase' argument 2 names different: declaration 'className' definition '_className'.
                            std::string const& className,
                                               ^
src/kOrganizify/Test/catch.hpp:14046:48: note: Function 'makeTestCase' argument 2 names different: declaration 'className' definition '_className'.
                            std::string const& _className,
                                               ^
src/kOrganizify/Test/catch.hpp:14048:51: style: inconclusive: Function 'makeTestCase' argument 4 names different: declaration 'lineInfo' definition '_lineInfo'. [funcArgNamesDifferent]
                            SourceLineInfo const& _lineInfo )
                                                  ^
src/kOrganizify/Test/catch.hpp:4821:51: note: Function 'makeTestCase' argument 4 names different: declaration 'lineInfo' definition '_lineInfo'.
                            SourceLineInfo const& lineInfo );
                                                  ^
src/kOrganizify/Test/catch.hpp:14048:51: note: Function 'makeTestCase' argument 4 names different: declaration 'lineInfo' definition '_lineInfo'.
                            SourceLineInfo const& _lineInfo )
                                                  ^
src/kOrganizify/Test/catch.hpp:16588:58: style: inconclusive: Function 'testRunStarting' argument 1 names different: declaration '_testRunInfo' definition '_testInfo'. [funcArgNamesDifferent]
void ConsoleReporter::testRunStarting(TestRunInfo const& _testInfo) {
                                                         ^
src/kOrganizify/Test/catch.hpp:6176:49: note: Function 'testRunStarting' argument 1 names different: declaration '_testRunInfo' definition '_testInfo'.
        void testRunStarting(TestRunInfo const& _testRunInfo) override;
                                                ^
src/kOrganizify/Test/catch.hpp:16588:58: note: Function 'testRunStarting' argument 1 names different: declaration '_testRunInfo' definition '_testInfo'.
void ConsoleReporter::testRunStarting(TestRunInfo const& _testInfo) {
                                                         ^
src/kOrganizify/Test/catch.hpp:8524:18: style: Local variable 'width' shadows outer function [shadowFunction]
            auto width = m_column.m_width - indent();
                 ^
src/kOrganizify/Test/catch.hpp:8616:10: note: Shadowed declaration
    auto width(size_t newWidth) -> Column& {
         ^
src/kOrganizify/Test/catch.hpp:8524:18: note: Shadow variable
            auto width = m_column.m_width - indent();
                 ^
src/kOrganizify/Test/catch.hpp:14677:17: style: Local variable 'matches' shadows outer function [shadowFunction]
        Matches matches( m_filters.size() );
                ^
src/kOrganizify/Test/catch.hpp:5156:14: note: Shadowed declaration
        bool matches( TestCaseInfo const& testCase ) const;
             ^
src/kOrganizify/Test/catch.hpp:14677:17: note: Shadow variable
        Matches matches( m_filters.size() );
                ^
src/kOrganizify/Test/catch.hpp:16729:15: performance: Range variable 'col' should be declared as const reference. [iterateByValue]
    for (auto col : cols) {
              ^
src/kOrganizify/Test/catch.hpp:12748:19: style: Variable 'rootTracker' can be declared as reference to const [constVariableReference]
        ITracker& rootTracker = m_trackerContext.startRun();
                  ^
src/kOrganizify/Test/catch.hpp:15761:53: style: Parameter 'result' can be declared as reference to const [constParameterReference]
    void prepareExpandedExpression(AssertionResult& result) {
                                                    ^
src/kOrganizify/Test/catch.hpp:2152:22: style: Variable 'timeInfo' can be declared as pointer to const [constVariablePointer]
            std::tm* timeInfo = std::gmtime(&converted);
                     ^
src/kOrganizify/Test/catch.hpp:16812:22: style: Variable 'timeInfo' can be declared as pointer to const [constVariablePointer]
            std::tm* timeInfo;
                     ^
src/kOrganizify/Test/catch.hpp:13858:19: performance: Ineffective call of function 'substr' because a prefix of the string is assigned to itself. Use replace() instead. [uselessCallsSubstr]
            str = str.substr( 0, i ) + withThis + str.substr( i+replaceThis.size() );
                  ^
src/kOrganizify/Test/catch.hpp:13981:37: performance: Ineffective call of function 'substr' because a prefix of the string is assigned to itself. Use replace() instead. [uselessCallsSubstr]
                expandedTestSpec =  expandedTestSpec.substr( 0, pos ) +
                                    ^
src/kOrganizify/Test/catch.hpp:14867:21: performance: Ineffective call of function 'substr' because a prefix of the string is assigned to itself. Use replace() instead. [uselessCallsSubstr]
            token = token.substr(0, m_escapeChars[i] - i) + token.substr(m_escapeChars[i] - i + 1);
                    ^
src/kOrganizify/Test/catch.hpp:15063:13: performance: Ineffective call of function 'substr' because a prefix of the string is assigned to itself. Use resize() or pop_back() instead. [uselessCallsSubstr]
        d = d.substr( 0, i+1 );
            ^
src/kOrganizify/Test/catch.hpp:15403:25: performance: Ineffective call of function 'substr' because a prefix of the string is assigned to itself. Use resize() or pop_back() instead. [uselessCallsSubstr]
            m_pattern = m_pattern.substr( 0, m_pattern.size()-1 );
                        ^
src/kOrganizify/Test/catch.hpp:15666:20: performance: Ineffective call of function 'substr' because a prefix of the string is assigned to itself. Use resize() or pop_back() instead. [uselessCallsSubstr]
        m_indent = m_indent.substr(0, m_indent.size() - 2);
                   ^
src/kOrganizify/Test/catch.hpp:8682:29: style: Consider using std::transform algorithm instead of a raw loop. [useStlAlgorithm]
                m_iterators.push_back(col.end());
                            ^
src/kOrganizify/Test/catch.hpp:8698:29: style: Consider using std::transform algorithm instead of a raw loop. [useStlAlgorithm]
                m_iterators.push_back(col.begin());
                            ^
src/kOrganizify/Test/catch.hpp:9407:13: style: Consider using std::any_of algorithm instead of a raw loop. [useStlAlgorithm]
            for( auto const &name : m_optNames ) {
            ^
src/kOrganizify/Test/catch.hpp:9559:26: style: Consider using std::accumulate algorithm instead of a raw loop. [useStlAlgorithm]
                optWidth = (std::max)(optWidth, cols.left.size() + 2);
                         ^
src/kOrganizify/Test/catch.hpp:10602:24: style: Consider using std::transform algorithm instead of a raw loop. [useStlAlgorithm]
                parsed.push_back(trim(extractInstanceName(enumValue)));
                       ^
src/kOrganizify/Test/catch.hpp:10611:0: style: Consider using std::find_if algorithm instead of a raw loop. [useStlAlgorithm]
                if( valueToName.first == value )
^
src/kOrganizify/Test/catch.hpp:10903:32: style: Consider using std::find_if algorithm instead of a raw loop. [useStlAlgorithm]
            if (sig == def.id) {
                               ^
src/kOrganizify/Test/catch.hpp:11310:18: style: Consider using std::accumulate algorithm instead of a raw loop. [useStlAlgorithm]
            size += spelling.size() + 2;
                 ^
src/kOrganizify/Test/catch.hpp:11362:24: style: Consider using std::accumulate algorithm instead of a raw loop. [useStlAlgorithm]
            maxNameLen = (std::max)( maxNameLen, factoryKvp.first.size() );
                       ^
src/kOrganizify/Test/catch.hpp:12674:21: style: Consider using std::any_of algorithm instead of a raw loop. [useStlAlgorithm]
                    for ( auto const& child : m_children ) {
                    ^
src/kOrganizify/Test/catch.hpp:14139:23: style: Consider using std::accumulate algorithm instead of a raw loop. [useStlAlgorithm]
            full_size += tag.size();
                      ^
src/kOrganizify/Test/catch.hpp:14235:35: style: Consider using std::transform algorithm instead of a raw loop. [useStlAlgorithm]
                    indexed_tests.emplace_back(h(testCase), &testCase);
                                  ^
src/kOrganizify/Test/catch.hpp:14250:28: style: Consider using std::transform algorithm instead of a raw loop. [useStlAlgorithm]
                    sorted.emplace_back(*hashed.second);
                           ^
src/kOrganizify/Test/catch.hpp:14284:25: style: Consider using std::copy_if algorithm instead of a raw loop. [useStlAlgorithm]
                filtered.push_back(testCase);
                        ^
src/kOrganizify/Test/catch.hpp:10690:13: error: syntax error [syntaxError]
            @try {
            ^
src/kOrganizify/Test/catch.hpp:10363:0: information: Include file: <android/log.h> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <android/log.h>
^
src/kOrganizify/Test/catch.hpp:8010:14: performance: inconclusive: Technically the member function 'Catch::FatalConditionHandler::engage_platform' can be static (but you may consider moving to unnamed namespace). [functionStatic]
        void engage_platform();
             ^
src/kOrganizify/Test/catch.hpp:10758:33: note: Technically the member function 'Catch::FatalConditionHandler::engage_platform' can be static (but you may consider moving to unnamed namespace).
    void FatalConditionHandler::engage_platform() {}
                                ^
src/kOrganizify/Test/catch.hpp:8010:14: note: Technically the member function 'Catch::FatalConditionHandler::engage_platform' can be static (but you may consider moving to unnamed namespace).
        void engage_platform();
             ^
src/kOrganizify/Test/catch.hpp:8011:14: performance: inconclusive: Technically the member function 'Catch::FatalConditionHandler::disengage_platform' can be static (but you may consider moving to unnamed namespace). [functionStatic]
        void disengage_platform();
             ^
src/kOrganizify/Test/catch.hpp:10759:33: note: Technically the member function 'Catch::FatalConditionHandler::disengage_platform' can be static (but you may consider moving to unnamed namespace).
    void FatalConditionHandler::disengage_platform() {}
                                ^
src/kOrganizify/Test/catch.hpp:8011:14: note: Technically the member function 'Catch::FatalConditionHandler::disengage_platform' can be static (but you may consider moving to unnamed namespace).
        void disengage_platform();
             ^
src/kOrganizify/Test/catch.hpp:10717:29: style: Variable 'msg' can be declared as reference to const [constVariableReference]
        catch( std::string& msg ) {
                            ^
src/kOrganizify/Test/catch.hpp:9955:18: style: Consider using std::transform algorithm instead of a raw loop. [useStlAlgorithm]
            elem = trim(elem);
                 ^
src/kOrganizify/Test/catch.hpp:9958:18: style: Consider using std::transform algorithm instead of a raw loop. [useStlAlgorithm]
            elem = trim(elem);
                 ^
src/kOrganizify/Test/catch.hpp:15151:0: information: Include file: <cstddef> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <cstddef>
^
src/kOrganizify/Test/schedulerTest.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 109 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/kOrganizify/kOrganizify/src/scheduler.h:8:0: information: Include file: <QList> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <QList>
^
src/kOrganizify/kOrganizify/src/scheduler.h:9:0: information: Include file: <QDate> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <QDate>
^
src/kOrganizify/kOrganizify/src/scheduler.h:10:0: information: Include file: <QTime> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <QTime>
^
src/kOrganizify/kOrganizify/src/scheduler.h:11:0: information: Include file: <QSet> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <QSet>
^
src/kOrganizify/kOrganizify/src/scheduler.h:13:0: information: Include file: <cstdlib> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <cstdlib>
^
src/kOrganizify/kOrganizify/src/scheduler.h:23:9: error: There is an unknown macro here somewhere. Configuration is required. If slots is a macro then please configure it. [unknownMacro]
private slots:
        ^
src/kOrganizify/Test/settingsTest.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 109 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/kOrganizify/Test/settingsTest.cpp:2:0: information: Include file: <QJsonObject> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <QJsonObject>
^
src/kOrganizify/kOrganizify/src/settings.h:5:0: information: Include file: <QJsonObject> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <QJsonObject>
^
src/kOrganizify/kOrganizify/src/settings.h:6:0: information: Include file: <QJsonValue> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <QJsonValue>
^
src/kOrganizify/kOrganizify/src/settings.h:16:10: warning: The class 'Settings' defines member function with name 'loadData' also defined in its parent class 'SaveLoad'. [duplInheritedMember]
    void loadData(const QString &username);
         ^
src/kOrganizify/kOrganizify/src/saveload.h:16:10: note: Parent function 'SaveLoad::loadData'
    void loadData(const QString &username);
         ^
src/kOrganizify/kOrganizify/src/settings.h:16:10: note: Derived function 'Settings::loadData'
    void loadData(const QString &username);
         ^
src/kOrganizify/kOrganizify/src/settings.h:17:10: warning: The class 'Settings' defines member function with name 'saveData' also defined in its parent class 'SaveLoad'. [duplInheritedMember]
    void saveData(const QString &username);
         ^
src/kOrganizify/kOrganizify/src/saveload.h:15:10: note: Parent function 'SaveLoad::saveData'
    void saveData(const QString &username);
         ^
src/kOrganizify/kOrganizify/src/settings.h:17:10: note: Derived function 'Settings::saveData'
    void saveData(const QString &username);
         ^
src/kOrganizify/Test/taskTest.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 109 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/kOrganizify/Test/toDoListTest.cpp:0:0: information: Too many #ifdef configurations - cppcheck only checks 12 of 109 configurations. Use --force to check all configurations. [toomanyconfigs]

^
src/kOrganizify/kOrganizify/src/toDoList.h:6:0: information: Include file: <QObject> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <QObject>
^
src/kOrganizify/kOrganizify/src/toDoList.h:7:0: information: Include file: <QVector> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <QVector>
^
src/kOrganizify/kOrganizify/src/toDoList.h:8:0: information: Include file: <QString> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <QString>
^
src/kOrganizify/kOrganizify/src/toDoList.h:9:0: information: Include file: <QJsonArray> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <QJsonArray>
^
src/kOrganizify/kOrganizify/src/toDoList.h:10:0: information: Include file: <QJsonValue> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <QJsonValue>
^
src/kOrganizify/kOrganizify/src/toDoList.h:21:10: warning: The class 'ToDoList' defines member function with name 'loadData' also defined in its parent class 'SaveLoad'. [duplInheritedMember]
    void loadData(const QString &username);
         ^
src/kOrganizify/kOrganizify/src/saveload.h:16:10: note: Parent function 'SaveLoad::loadData'
    void loadData(const QString &username);
         ^
src/kOrganizify/kOrganizify/src/toDoList.h:21:10: note: Derived function 'ToDoList::loadData'
    void loadData(const QString &username);
         ^
src/kOrganizify/kOrganizify/src/toDoList.h:22:10: warning: The class 'ToDoList' defines member function with name 'saveData' also defined in its parent class 'SaveLoad'. [duplInheritedMember]
    void saveData(const QString &username);
         ^
src/kOrganizify/kOrganizify/src/saveload.h:15:10: note: Parent function 'SaveLoad::saveData'
    void saveData(const QString &username);
         ^
src/kOrganizify/kOrganizify/src/toDoList.h:22:10: note: Derived function 'ToDoList::saveData'
    void saveData(const QString &username);
         ^
src/kOrganizify/Test/toDoListTest.cpp:95:15: style: Variable 'retrievedTask1' can be declared as pointer to const [constVariablePointer]
        Task* retrievedTask1 = toDoList.getTask(0);
              ^
src/kOrganizify/Test/toDoListTest.cpp:96:15: style: Variable 'retrievedTask2' can be declared as pointer to const [constVariablePointer]
        Task* retrievedTask2 = toDoList.getTask(1);
              ^
src/kOrganizify/kOrganizify/src/appwindow.h:4:0: information: Include file: <QMainWindow> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <QMainWindow>
^
src/kOrganizify/kOrganizify/src/appwindow.h:5:0: information: Include file: <QPixmap> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <QPixmap>
^
src/kOrganizify/kOrganizify/src/appwindow.h:6:0: information: Include file: <QCheckBox> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <QCheckBox>
^
src/kOrganizify/kOrganizify/src/appwindow.h:7:0: information: Include file: <QString> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <QString>
^
src/kOrganizify/kOrganizify/src/appwindow.h:8:0: information: Include file: <QDir> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <QDir>
^
src/kOrganizify/kOrganizify/src/appwindow.h:9:0: information: Include file: <QVector> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <QVector>
^
src/kOrganizify/kOrganizify/src/appwindow.h:10:0: information: Include file: <QScrollBar> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <QScrollBar>
^
src/kOrganizify/kOrganizify/src/mainwindow.h:5:0: information: Include file: <QMainWindow> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <QMainWindow>
^
src/kOrganizify/kOrganizify/src/client.h:4:0: information: Include file: <QObject> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <QObject>
^
src/kOrganizify/kOrganizify/src/client.h:5:0: information: Include file: <QTcpSocket> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <QTcpSocket>
^
src/kOrganizify/kOrganizify/src/user.h:10:0: information: Include file: <QString> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <QString>
^
src/kOrganizify/kOrganizify/src/user.h:11:0: information: Include file: <QFile> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <QFile>
^
src/kOrganizify/kOrganizify/src/user.h:12:0: information: Include file: <QJsonValue> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <QJsonValue>
^
src/kOrganizify/kOrganizify/src/eventwindow.h:4:0: information: Include file: <QWidget> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <QWidget>
^
src/kOrganizify/kOrganizify/src/appwindow.h:14:0: information: Include file: "qlistwidget.h" not found. [missingInclude]
#include "qlistwidget.h"
^
src/kOrganizify/kOrganizify/src/responsewindow.h:4:0: information: Include file: <QString> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <QString>
^
src/kOrganizify/kOrganizify/src/responsewindow.h:5:0: information: Include file: <QWidget> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <QWidget>
^
src/kOrganizify/kOrganizify/src/settingswindow.h:4:0: information: Include file: <QMainWindow> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <QMainWindow>
^
src/kOrganizify/kOrganizify/src/settingswindow.h:5:0: information: Include file: <QString> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <QString>
^
src/kOrganizify/kOrganizify/src/settingswindow.h:6:0: information: Include file: <QPalette> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <QPalette>
^
src/kOrganizify/kOrganizify/src/settingswindow.h:7:0: information: Include file: <QMap> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <QMap>
^
src/kOrganizify/kOrganizify/src/syncwindow.h:5:0: information: Include file: <QWidget> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <QWidget>
^
src/kOrganizify/kOrganizify/src/basiceventwindow.h:4:0: information: Include file: <QDialog> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <QDialog>
^
src/kOrganizify/kOrganizify/src/basiceventwindow.h:5:0: information: Include file: <QString> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <QString>
^
src/kOrganizify/kOrganizify/src/basiceventwindow.h:6:0: information: Include file: <QMessageBox> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <QMessageBox>
^
src/kOrganizify/kOrganizify/src/basiceventwindow.h:7:0: information: Include file: <QDate> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <QDate>
^
src/kOrganizify/kOrganizify/src/notifications.h:5:0: information: Include file: <QObject> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <QObject>
^
src/kOrganizify/kOrganizify/src/notifications.h:6:0: information: Include file: <QDateTime> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <QDateTime>
^
src/kOrganizify/kOrganizify/src/notifications.h:7:0: information: Include file: <QTimer> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <QTimer>
^
src/kOrganizify/kOrganizify/src/notifications.h:8:0: information: Include file: <QMessageBox> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <QMessageBox>
^
src/kOrganizify/kOrganizify/src/notifications.h:9:0: information: Include file: <QList> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <QList>
^
src/kOrganizify/kOrganizify/src/notificationswindow.h:4:0: information: Include file: <QWidget> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <QWidget>
^
src/kOrganizify/kOrganizify/src/notificationswindow.h:5:0: information: Include file: <QDateTime> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <QDateTime>
^
src/kOrganizify/kOrganizify/src/notificationswindow.h:6:0: information: Include file: <QTimer> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <QTimer>
^
src/kOrganizify/kOrganizify/src/notificationswindow.h:8:0: information: Include file: <QtMultimedia/QSoundEffect> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <QtMultimedia/QSoundEffect>
^
src/kOrganizify/kOrganizify/src/syncdeniedwindow.h:4:0: information: Include file: <QWidget> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <QWidget>
^
src/kOrganizify/kOrganizify/src/syncresponsewindow.h:4:0: information: Include file: <QWidget> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <QWidget>
^
src/kOrganizify/kOrganizify/src/appwindow.h:25:0: information: Include file: "ui_settingswindow.h" not found. [missingInclude]
#include "ui_settingswindow.h"
^
src/kOrganizify/kOrganizify/src/appwindow.cpp:2:0: information: Include file: "qlistwidget.h" not found. [missingInclude]
#include "qlistwidget.h"
^
src/kOrganizify/kOrganizify/src/appwindow.cpp:3:0: information: Include file: "ui_appwindow.h" not found. [missingInclude]
#include "ui_appwindow.h"
^
src/kOrganizify/kOrganizify/src/client.h:17:8: error: There is an unknown macro here somewhere. Configuration is required. If slots is a macro then please configure it. [unknownMacro]
public slots:
       ^
src/kOrganizify/kOrganizify/src/basicevent.cpp:3:13: warning: Member variable 'BasicEvent::m_duration' is not initialized in the constructor. [uninitMemberVar]
BasicEvent::BasicEvent() {}
            ^
src/kOrganizify/kOrganizify/src/basiceventwindow.cpp:2:0: information: Include file: "ui_basiceventwindow.h" not found. [missingInclude]
#include "ui_basiceventwindow.h"
^
src/kOrganizify/kOrganizify/src/calendar.cpp:6:11: warning: inconclusive: Member variable 'Calendar::m_basicEvents' is not assigned in the copy constructor. Should it be copied? [missingMemberCopy]
Calendar::Calendar(const Calendar &other){
          ^
src/kOrganizify/kOrganizify/src/calendar.cpp:7:5: performance: Variable 'm_events' is assigned in constructor body. Consider performing initialization in initialization list. [useInitializationList]
    m_events = other.m_events;
    ^
src/kOrganizify/kOrganizify/src/calendar.cpp:10:16: warning: The class 'Calendar' defines member function with name 'loadData' also defined in its parent class 'SaveLoad'. [duplInheritedMember]
void Calendar::loadData(const QString &username) {
               ^
src/kOrganizify/kOrganizify/src/saveload.h:16:10: note: Parent function 'SaveLoad::loadData'
    void loadData(const QString &username);
         ^
src/kOrganizify/kOrganizify/src/calendar.cpp:10:16: note: Derived function 'Calendar::loadData'
void Calendar::loadData(const QString &username) {
               ^
src/kOrganizify/kOrganizify/src/calendar.cpp:51:16: warning: The class 'Calendar' defines member function with name 'saveData' also defined in its parent class 'SaveLoad'. [duplInheritedMember]
void Calendar::saveData(const QString &username) {
               ^
src/kOrganizify/kOrganizify/src/saveload.h:15:10: note: Parent function 'SaveLoad::saveData'
    void saveData(const QString &username);
         ^
src/kOrganizify/kOrganizify/src/calendar.cpp:51:16: note: Derived function 'Calendar::saveData'
void Calendar::saveData(const QString &username) {
               ^
src/kOrganizify/kOrganizify/src/calendar.cpp:134:5: style: Consider using std::any_of algorithm instead of a raw loop. [useStlAlgorithm]
    for (const Event& event : m_events) {
    ^
src/kOrganizify/kOrganizify/src/client.cpp:3:0: information: Include file: <QEventLoop> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <QEventLoop>
^
src/kOrganizify/kOrganizify/src/client.cpp:4:0: information: Include file: <QJsonDocument> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <QJsonDocument>
^
src/kOrganizify/kOrganizify/src/client.cpp:5:0: information: Include file: <QJsonObject> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <QJsonObject>
^
src/kOrganizify/kOrganizify/src/client.cpp:6:0: information: Include file: <QCoreApplication> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <QCoreApplication>
^
src/kOrganizify/kOrganizify/src/event.h:29:10: performance: inconclusive: Technically the member function 'Event::deleteString' can be static (but you may consider moving to unnamed namespace). [functionStatic]
    void deleteString(QString &str);
         ^
src/kOrganizify/kOrganizify/src/event.cpp:104:13: note: Technically the member function 'Event::deleteString' can be static (but you may consider moving to unnamed namespace).
void Event::deleteString(QString &str) {
            ^
src/kOrganizify/kOrganizify/src/event.h:29:10: note: Technically the member function 'Event::deleteString' can be static (but you may consider moving to unnamed namespace).
    void deleteString(QString &str);
         ^
src/kOrganizify/kOrganizify/src/event.cpp:5:16: warning: The class 'Event' defines member function with name 'getTitle' also defined in its parent class 'BasicEvent'. [duplInheritedMember]
QString Event::getTitle() const {
               ^
src/kOrganizify/kOrganizify/src/basicevent.h:12:13: note: Parent function 'BasicEvent::getTitle'
    QString getTitle() const;
            ^
src/kOrganizify/kOrganizify/src/event.cpp:5:16: note: Derived function 'Event::getTitle'
QString Event::getTitle() const {
               ^
src/kOrganizify/kOrganizify/src/event.cpp:9:13: warning: The class 'Event' defines member function with name 'setTitle' also defined in its parent class 'BasicEvent'. [duplInheritedMember]
void Event::setTitle(const QString &title) {
            ^
src/kOrganizify/kOrganizify/src/basicevent.h:13:10: note: Parent function 'BasicEvent::setTitle'
    void setTitle(const QString &title);
         ^
src/kOrganizify/kOrganizify/src/event.cpp:9:13: note: Derived function 'Event::setTitle'
void Event::setTitle(const QString &title) {
            ^
src/kOrganizify/kOrganizify/src/event.cpp:13:12: warning: The class 'Event' defines member function with name 'getDuration' also defined in its parent class 'BasicEvent'. [duplInheritedMember]
int Event::getDuration() const {
           ^
src/kOrganizify/kOrganizify/src/basicevent.h:15:9: note: Parent function 'BasicEvent::getDuration'
    int getDuration() const;
        ^
src/kOrganizify/kOrganizify/src/event.cpp:13:12: note: Derived function 'Event::getDuration'
int Event::getDuration() const {
           ^
src/kOrganizify/kOrganizify/src/event.cpp:17:13: warning: The class 'Event' defines member function with name 'setDuration' also defined in its parent class 'BasicEvent'. [duplInheritedMember]
void Event::setDuration(const int duration) {
            ^
src/kOrganizify/kOrganizify/src/basicevent.h:16:10: note: Parent function 'BasicEvent::setDuration'
    void setDuration(const int duration);
         ^
src/kOrganizify/kOrganizify/src/event.cpp:17:13: note: Derived function 'Event::setDuration'
void Event::setDuration(const int duration) {
            ^
src/kOrganizify/kOrganizify/src/eventwindow.cpp:3:0: information: Include file: "ui_eventwindow.h" not found. [missingInclude]
#include "ui_eventwindow.h"
^
src/kOrganizify/kOrganizify/src/eventwindow.cpp:4:0: information: Include file: <QMessageBox> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <QMessageBox>
^
src/kOrganizify/kOrganizify/src/eventwindow.cpp:5:0: information: Include file: <QKeyEvent> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <QKeyEvent>
^
src/kOrganizify/kOrganizify/src/eventwindow.h:37:9: error: There is an unknown macro here somewhere. Configuration is required. If slots is a macro then please configure it. [unknownMacro]
private slots:
        ^
src/kOrganizify/kOrganizify/src/main.cpp:4:0: information: Include file: <QApplication> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <QApplication>
^
src/kOrganizify/kOrganizify/src/mainwindow.cpp:3:0: information: Include file: "ui_mainwindow.h" not found. [missingInclude]
#include "ui_mainwindow.h"
^
src/kOrganizify/kOrganizify/src/notificationswindow.h:22:8: error: There is an unknown macro here somewhere. Configuration is required. If slots is a macro then please configure it. [unknownMacro]
public slots:
       ^
src/kOrganizify/kOrganizify/src/notificationswindow.cpp:2:0: information: Include file: "ui_notificationswindow.h" not found. [missingInclude]
#include "ui_notificationswindow.h"
^
src/kOrganizify/kOrganizify/src/responsewindow.cpp:2:0: information: Include file: "ui_responsewindow.h" not found. [missingInclude]
#include "ui_responsewindow.h"
^
src/kOrganizify/kOrganizify/src/responsewindow.h:20:8: error: There is an unknown macro here somewhere. Configuration is required. If slots is a macro then please configure it. [unknownMacro]
public slots:
       ^
src/kOrganizify/kOrganizify/src/saveload.cpp:2:0: information: Include file: <QDir> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <QDir>
^
src/kOrganizify/kOrganizify/src/saveload.cpp:3:0: information: Include file: <QFile> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <QFile>
^
src/kOrganizify/kOrganizify/src/saveload.cpp:4:0: information: Include file: <QIODevice> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <QIODevice>
^
src/kOrganizify/kOrganizify/src/saveload.cpp:5:0: information: Include file: <QJsonDocument> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <QJsonDocument>
^
src/kOrganizify/kOrganizify/src/saveload.cpp:6:0: information: Include file: <QTextStream> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <QTextStream>
^
src/kOrganizify/kOrganizify/src/saveload.cpp:7:0: information: Include file: <QCoreApplication> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <QCoreApplication>
^
src/kOrganizify/kOrganizify/src/settings.cpp:4:5: performance: Variable 'm_color' is assigned in constructor body. Consider performing initialization in initialization list. [useInitializationList]
    m_color = color;
    ^
src/kOrganizify/kOrganizify/src/settings.cpp:8:16: warning: The class 'Settings' defines member function with name 'loadData' also defined in its parent class 'SaveLoad'. [duplInheritedMember]
void Settings::loadData(const QString &username) {
               ^
src/kOrganizify/kOrganizify/src/saveload.h:16:10: note: Parent function 'SaveLoad::loadData'
    void loadData(const QString &username);
         ^
src/kOrganizify/kOrganizify/src/settings.cpp:8:16: note: Derived function 'Settings::loadData'
void Settings::loadData(const QString &username) {
               ^
src/kOrganizify/kOrganizify/src/settings.cpp:29:16: warning: The class 'Settings' defines member function with name 'saveData' also defined in its parent class 'SaveLoad'. [duplInheritedMember]
void Settings::saveData(const QString &username) {
               ^
src/kOrganizify/kOrganizify/src/saveload.h:15:10: note: Parent function 'SaveLoad::saveData'
    void saveData(const QString &username);
         ^
src/kOrganizify/kOrganizify/src/settings.cpp:29:16: note: Derived function 'Settings::saveData'
void Settings::saveData(const QString &username) {
               ^
src/kOrganizify/kOrganizify/src/settingswindow.cpp:2:0: information: Include file: "ui_settingswindow.h" not found. [missingInclude]
#include "ui_settingswindow.h"
^
src/kOrganizify/kOrganizify/src/settingswindow.cpp:3:0: information: Include file: <QDir> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <QDir>
^
src/kOrganizify/kOrganizify/src/settingswindow.cpp:4:0: information: Include file: <QMap> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <QMap>
^
src/kOrganizify/kOrganizify/src/settingswindow.h:32:8: error: There is an unknown macro here somewhere. Configuration is required. If slots is a macro then please configure it. [unknownMacro]
public slots:
       ^
src/kOrganizify/kOrganizify/src/syncdeniedwindow.cpp:2:0: information: Include file: "ui_syncdeniedwindow.h" not found. [missingInclude]
#include "ui_syncdeniedwindow.h"
^
src/kOrganizify/kOrganizify/src/syncresponsewindow.cpp:2:0: information: Include file: "ui_syncresponsewindow.h" not found. [missingInclude]
#include "ui_syncresponsewindow.h"
^
src/kOrganizify/kOrganizify/src/syncresponsewindow.h:24:13: style: inconclusive: Member variable 'SyncResponseWindow::m_friendName' is in the wrong place in the initializer list. [initializerList]
    QString m_friendName;
            ^
src/kOrganizify/kOrganizify/src/syncresponsewindow.cpp:7:5: note: Member variable 'SyncResponseWindow::m_friendName' is in the wrong place in the initializer list.
    m_friendName(friendName),
    ^
src/kOrganizify/kOrganizify/src/syncresponsewindow.h:24:13: note: Member variable 'SyncResponseWindow::m_friendName' is in the wrong place in the initializer list.
    QString m_friendName;
            ^
src/kOrganizify/kOrganizify/src/syncresponsewindow.cpp:36:10: style: Local variable 'noResponse' shadows outer function [shadowFunction]
    emit noResponse(m_friendName);
         ^
src/kOrganizify/kOrganizify/src/syncresponsewindow.h:21:10: note: Shadowed declaration
    void noResponse(QString friendName);
         ^
src/kOrganizify/kOrganizify/src/syncresponsewindow.cpp:36:10: note: Shadow variable
    emit noResponse(m_friendName);
         ^
src/kOrganizify/kOrganizify/src/syncwindow.cpp:2:0: information: Include file: "ui_syncwindow.h" not found. [missingInclude]
#include "ui_syncwindow.h"
^
src/kOrganizify/kOrganizify/src/syncwindow.cpp:4:0: information: Include file: <QDebug> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <QDebug>
^
src/kOrganizify/kOrganizify/src/syncwindow.h:26:9: error: There is an unknown macro here somewhere. Configuration is required. If slots is a macro then please configure it. [unknownMacro]
private slots:
        ^
src/kOrganizify/kOrganizify/src/task.cpp:3:0: information: Include file: <QDebug> not found. Please note: Cppcheck does not need standard library headers to get proper results. [missingIncludeSystem]
#include <QDebug>
^
src/kOrganizify/kOrganizify/src/task.cpp:6:7: warning: inconclusive: Member variable 'Task::m_isChecked' is not initialized in the constructor. [uninitMemberVar]
Task::Task() {}
      ^
src/kOrganizify/kOrganizify/src/toDoList.cpp:9:16: warning: The class 'ToDoList' defines member function with name 'loadData' also defined in its parent class 'SaveLoad'. [duplInheritedMember]
void ToDoList::loadData(const QString &username) {
               ^
src/kOrganizify/kOrganizify/src/saveload.h:16:10: note: Parent function 'SaveLoad::loadData'
    void loadData(const QString &username);
         ^
src/kOrganizify/kOrganizify/src/toDoList.cpp:9:16: note: Derived function 'ToDoList::loadData'
void ToDoList::loadData(const QString &username) {
               ^
src/kOrganizify/kOrganizify/src/toDoList.cpp:40:16: warning: The class 'ToDoList' defines member function with name 'saveData' also defined in its parent class 'SaveLoad'. [duplInheritedMember]
void ToDoList::saveData(const QString &username) {
               ^
src/kOrganizify/kOrganizify/src/saveload.h:15:10: note: Parent function 'SaveLoad::saveData'
    void saveData(const QString &username);
         ^
src/kOrganizify/kOrganizify/src/toDoList.cpp:40:16: note: Derived function 'ToDoList::saveData'
void ToDoList::saveData(const QString &username) {
               ^
src/kOrganizify/kOrganizify/src/toDoList.cpp:67:16: style: Variable 'task' can be declared as reference to const [constVariableReference]
    for (Task& task : getTasks())
               ^
src/kOrganizify/Test/basicEventTest.cpp:4:0: style: The function '____C_A_T_C_H____T_E_S_T____3' is never used. [unusedFunction]
TEST_CASE("BasicEvent()", "[BasicEvent]") {
^
src/kOrganizify/Test/basicEventTest.cpp:17:0: style: The function '____C_A_T_C_H____T_E_S_T____8' is never used. [unusedFunction]
TEST_CASE("getTitle() Basic", "[BasicEvent]") {
^
src/kOrganizify/Test/basicEventTest.cpp:39:0: style: The function '____C_A_T_C_H____T_E_S_T____14' is never used. [unusedFunction]
TEST_CASE("setTitle() Basic", "[BasicEvent]") {
^
src/kOrganizify/Test/basicEventTest.cpp:61:0: style: The function '____C_A_T_C_H____T_E_S_T____20' is never used. [unusedFunction]
TEST_CASE("getDuration() Basic", "[BasicEvent]") {
^
src/kOrganizify/Test/basicEventTest.cpp:83:0: style: The function '____C_A_T_C_H____T_E_S_T____26' is never used. [unusedFunction]
TEST_CASE("setDuration() Basic", "[BasicEvent]") {
^
src/kOrganizify/Test/basicEventTest.cpp:129:0: style: The function '____C_A_T_C_H____T_E_S_T____38' is never used. [unusedFunction]
TEST_CASE("isValidate() Basic", "[BasicEvent]") {
^
src/kOrganizify/Test/basicEventTest.cpp:172:0: style: The function '____C_A_T_C_H____T_E_S_T____45' is never used. [unusedFunction]
TEST_CASE("operator==(const BasicEvent &other)", "[BasicEvent]") {
^
src/kOrganizify/Test/catch.hpp:3737:0: style: The function 'Contains' is never used. [unusedFunction]
    Vector::ContainsMatcher<T, AllocComp, AllocMatch> Contains( std::vector<T, AllocComp> const& comparator ) {
^
src/kOrganizify/Test/catch.hpp:3742:0: style: The function 'VectorContains' is never used. [unusedFunction]
    Vector::ContainsElementMatcher<T, Alloc> VectorContains( T const& comparator ) {
^
src/kOrganizify/Test/catch.hpp:3757:0: style: The function 'UnorderedEquals' is never used. [unusedFunction]
    Vector::UnorderedEqualsMatcher<T, AllocComp, AllocMatch> UnorderedEquals(std::vector<T, AllocComp> const& target) {
^
src/kOrganizify/Test/catch.hpp:3795:0: style: The function 'makeMatchExpr' is never used. [unusedFunction]
    auto makeMatchExpr( ArgT const& arg, MatcherT const& matcher, StringRef const& matcherString  ) -> MatchExpr<ArgT, MatcherT> {
^
src/kOrganizify/Test/catch.hpp:4052:0: style: The function 'table' is never used. [unusedFunction]
    GeneratorWrapper<std::tuple<Ts...>> table( std::initializer_list<std::tuple<typename std::decay<Ts>::type...>> tuples ) {
^
src/kOrganizify/Test/catch.hpp:4083:0: style: The function 'generate' is never used. [unusedFunction]
    auto generate( StringRef generatorName, SourceLineInfo const& lineInfo, L const& generatorExpression ) -> decltype(std::declval<decltype(generatorExpression())>().get()) {
^
src/kOrganizify/Test/catch.hpp:4149:0: style: The function 'take' is never used. [unusedFunction]
    GeneratorWrapper<T> take(size_t target, GeneratorWrapper<T>&& generator) {
^
src/kOrganizify/Test/catch.hpp:4188:0: style: The function 'filter' is never used. [unusedFunction]
    GeneratorWrapper<T> filter(Predicate&& pred, GeneratorWrapper<T>&& generator) {
^
src/kOrganizify/Test/catch.hpp:4244:0: style: The function 'repeat' is never used. [unusedFunction]
    GeneratorWrapper<T> repeat(size_t repeats, GeneratorWrapper<T>&& generator) {
^
src/kOrganizify/Test/catch.hpp:4276:0: style: The function 'map' is never used. [unusedFunction]
    GeneratorWrapper<T> map(Func&& function, GeneratorWrapper<U>&& generator) {
^
src/kOrganizify/Test/catch.hpp:4326:0: style: The function 'chunk' is never used. [unusedFunction]
    GeneratorWrapper<std::vector<T>> chunk(size_t size, GeneratorWrapper<T>&& generator) {
^
src/kOrganizify/Test/catch.hpp:4446:0: style: The function 'none' is never used. [unusedFunction]
        bool none() const { return nullableValue == nullptr; }
^
src/kOrganizify/Test/catch.hpp:4644:0: style: The function 'random' is never used. [unusedFunction]
random(T a, T b) {
^
src/kOrganizify/Test/catch.hpp:4693:0: style: The function 'range' is never used. [unusedFunction]
GeneratorWrapper<T> range(T const& start, T const& end, T const& step) {
^
src/kOrganizify/Test/catch.hpp:4733:0: style: The function 'from_range' is never used. [unusedFunction]
GeneratorWrapper<ResultType> from_range(InputIterator from, InputSentinel to) {
^
src/kOrganizify/Test/catch.hpp:8261:0: style: The function 'handleExceptionThrownAsExpected' is never used. [unusedFunction]
    void AssertionHandler::handleExceptionThrownAsExpected() {
^
src/kOrganizify/Test/catch.hpp:8264:0: style: The function 'handleExceptionNotThrownAsExpected' is never used. [unusedFunction]
    void AssertionHandler::handleExceptionNotThrownAsExpected() {
^
src/kOrganizify/Test/catch.hpp:8272:0: style: The function 'handleThrowingCallSkipped' is never used. [unusedFunction]
    void AssertionHandler::handleThrowingCallSkipped() {
^
src/kOrganizify/Test/catch.hpp:9180:0: style: The function 'invokeLambda' is never used. [unusedFunction]
    inline auto invokeLambda( L const &lambda, std::string const &arg ) -> ParserResult {
^
src/kOrganizify/Test/catch.hpp:9274:0: style: The function 'required' is never used. [unusedFunction]
        auto required() -> DerivedT & {
^
src/kOrganizify/Test/catch.hpp:9298:0: style: The function 'makeRef' is never used. [unusedFunction]
        static auto makeRef(LambdaT const &lambda) -> std::shared_ptr<BoundValueRefBase> {
^
src/kOrganizify/Test/catch.hpp:9971:0: style: The function 'getFilename' is never used. [unusedFunction]
    std::string const& Config::getFilename() const {
^
src/kOrganizify/Test/catch.hpp:9980:0: style: The function 'getProcessName' is never used. [unusedFunction]
    std::string Config::getProcessName() const { return m_data.processName; }
^
src/kOrganizify/Test/catch.hpp:10300:0: style: The function 'getRunner' is never used. [unusedFunction]
        IRunner* getRunner() override {
^
src/kOrganizify/Test/catch.hpp:10497:0: style: The function 'isDebuggerActive' is never used. [unusedFunction]
       bool isDebuggerActive() { return false; }
^
src/kOrganizify/Test/catch.hpp:10542:0: style: The function 'throw_runtime_error' is never used. [unusedFunction]
    void throw_runtime_error(std::string const& msg) {
^
src/kOrganizify/Test/catch.hpp:10609:0: style: The function 'lookup' is never used. [unusedFunction]
        StringRef EnumInfo::lookup( int value ) const {
^
src/kOrganizify/Test/catch.hpp:11159:0: style: The function 'isMulti' is never used. [unusedFunction]
    bool IStreamingReporter::isMulti() const { return false; }
^
src/kOrganizify/Test/catch.hpp:11432:0: style: The function 'Message' is never used. [unusedFunction]
Exception::ExceptionMessageMatcher Message(std::string const& message) {
^
src/kOrganizify/Test/catch.hpp:11656:0: style: The function 'WithinULP' is never used. [unusedFunction]
Floating::WithinUlpsMatcher WithinULP(double target, uint64_t maxUlpDiff) {
^
src/kOrganizify/Test/catch.hpp:11664:0: style: The function 'WithinAbs' is never used. [unusedFunction]
Floating::WithinAbsMatcher WithinAbs(double target, double margin) {
^
src/kOrganizify/Test/catch.hpp:11668:0: style: The function 'WithinRel' is never used. [unusedFunction]
Floating::WithinRelMatcher WithinRel(double target, double eps) {
^
src/kOrganizify/Test/catch.hpp:11785:0: style: The function 'EndsWith' is never used. [unusedFunction]
    StdString::EndsWithMatcher EndsWith( std::string const& str, CaseSensitive::Choice caseSensitivity ) {
^
src/kOrganizify/Test/catch.hpp:11788:0: style: The function 'StartsWith' is never used. [unusedFunction]
    StdString::StartsWithMatcher StartsWith( std::string const& str, CaseSensitive::Choice caseSensitivity ) {
^
src/kOrganizify/Test/catch.hpp:11792:0: style: The function 'Matches' is never used. [unusedFunction]
    StdString::RegexMatcher Matches(std::string const& regex, CaseSensitive::Choice caseSensitivity) {
^
src/kOrganizify/Test/catch.hpp:12239:0: style: The function 'discard' is never used. [unusedFunction]
    void SimplePcg32::discard(uint64_t skip) {
^
src/kOrganizify/Test/catch.hpp:12491:0: style: The function 'getMutableEnumValuesRegistry' is never used. [unusedFunction]
            IMutableEnumValuesRegistry& getMutableEnumValuesRegistry() override {
^
src/kOrganizify/Test/catch.hpp:12559:0: style: The function 'isJustInfo' is never used. [unusedFunction]
    bool isJustInfo( int flags ) {
^
src/kOrganizify/Test/catch.hpp:12567:0: style: The function 'shouldContinueOnFailure' is never used. [unusedFunction]
    bool shouldContinueOnFailure( int flags )    { return ( flags & ResultDisposition::ContinueOnFailure ) != 0; }
^
src/kOrganizify/Test/catch.hpp:12896:0: style: The function 'emplaceUnscopedMessage' is never used. [unusedFunction]
    void RunContext::emplaceUnscopedMessage( MessageBuilder const& builder ) {
^
src/kOrganizify/Test/catch.hpp:12900:0: style: The function 'getCurrentTestName' is never used. [unusedFunction]
    std::string RunContext::getCurrentTestName() const {
^
src/kOrganizify/Test/catch.hpp:12906:0: style: The function 'getLastResult' is never used. [unusedFunction]
    const AssertionResult * RunContext::getLastResult() const {
^
src/kOrganizify/Test/catch.hpp:12910:0: style: The function 'exceptionEarlyReported' is never used. [unusedFunction]
    void RunContext::exceptionEarlyReported() {
^
src/kOrganizify/Test/catch.hpp:12952:0: style: The function 'lastAssertionPassed' is never used. [unusedFunction]
    bool RunContext::lastAssertionPassed() {
^
src/kOrganizify/Test/catch.hpp:13499:0: style: The function 'useConfigData' is never used. [unusedFunction]
    void Session::useConfigData( ConfigData const& configData ) {
^
src/kOrganizify/Test/catch.hpp:13517:0: style: The function 'cli' is never used. [unusedFunction]
    clara::Parser const& Session::cli() const {
^
src/kOrganizify/Test/catch.hpp:13523:0: style: The function 'configData' is never used. [unusedFunction]
    ConfigData& Session::configData() {
^
src/kOrganizify/Test/catch.hpp:13652:0: style: The function 'overflow' is never used. [unusedFunction]
            int overflow( int c ) override {
^
src/kOrganizify/Test/catch.hpp:13853:0: style: The function 'replaceInPlace' is never used. [unusedFunction]
    bool replaceInPlace( std::string& str, std::string const& replaceThis, std::string const& withThis ) {
^
src/kOrganizify/Test/catch.hpp:14303:0: style: The function 'getAllTests' is never used. [unusedFunction]
    std::vector<TestCase> const& TestRegistry::getAllTests() const {
^
src/kOrganizify/Test/catch.hpp:14921:0: style: The function 'parseTestSpec' is never used. [unusedFunction]
    TestSpec parseTestSpec( std::string const& arg ) {
^
src/kOrganizify/Test/catch.hpp:14970:0: style: The function 'getEstimatedClockResolution' is never used. [unusedFunction]
    auto getEstimatedClockResolution() -> uint64_t {
^
src/kOrganizify/Test/catch.hpp:14984:0: style: The function 'getElapsedMilliseconds' is never used. [unusedFunction]
    auto Timer::getElapsedMilliseconds() const -> unsigned int {
^
src/kOrganizify/Test/catch.hpp:15708:0: style: The function 'writeComment' is never used. [unusedFunction]
    XmlWriter& XmlWriter::writeComment( std::string const& text, XmlFormatting fmt) {
^
src/kOrganizify/Test/catch.hpp:15722:0: style: The function 'writeBlankLine' is never used. [unusedFunction]
    XmlWriter& XmlWriter::writeBlankLine() {
^
src/kOrganizify/Test/catch.hpp:16373:0: style: The function 'columnInfos' is never used. [unusedFunction]
    auto columnInfos() const -> std::vector<ColumnInfo> const& {
^
src/kOrganizify/Test/eventTest.cpp:39:0: style: The function '____C_A_T_C_H____T_E_S_T____18' is never used. [unusedFunction]
TEST_CASE("setTitle(const QString &title)", "[Event]") {
^
src/kOrganizify/Test/eventTest.cpp:50:0: style: The function '____C_A_T_C_H____T_E_S_T____23' is never used. [unusedFunction]
TEST_CASE("setDuration(const int duration)", "[Event]") {
^
src/kOrganizify/Test/eventTest.cpp:61:0: style: The function '____C_A_T_C_H____T_E_S_T____28' is never used. [unusedFunction]
TEST_CASE("setDuration()", "[Event]") {
^
src/kOrganizify/Test/eventTest.cpp:78:0: style: The function '____C_A_T_C_H____T_E_S_T____33' is never used. [unusedFunction]
TEST_CASE("customEventPriorityToString(CustomEventPriority priority)", "[Event]") {
^
src/kOrganizify/Test/eventTest.cpp:94:0: style: The function '____C_A_T_C_H____T_E_S_T____43' is never used. [unusedFunction]
TEST_CASE("overlapsWith(const Event& other)", "[Event]") {
^
src/kOrganizify/kOrganizify/src/calendar.cpp:92:0: style: The function 'updateEvent' is never used. [unusedFunction]
void Calendar::updateEvent(const Event &oldEvent, const Event &newEvent){
^
src/kOrganizify/kOrganizify/src/calendar.cpp:101:0: style: The function 'getEvents' is never used. [unusedFunction]
QList<Event> Calendar::getEvents() const {
^
src/kOrganizify/kOrganizify/src/calendar.cpp:105:0: style: The function 'getBasicEvent' is never used. [unusedFunction]
BasicEvent Calendar::getBasicEvent(const int index) {
^
src/kOrganizify/kOrganizify/src/calendar.cpp:109:0: style: The function 'getEvent' is never used. [unusedFunction]
Event Calendar::getEvent(const int index) {
^
src/kOrganizify/kOrganizify/src/calendar.cpp:113:0: style: The function 'sizeBasic' is never used. [unusedFunction]
int Calendar::sizeBasic() {
^
src/kOrganizify/kOrganizify/src/calendar.cpp:121:0: style: The function 'getEventsForWeek' is never used. [unusedFunction]
QList<Event> Calendar::getEventsForWeek(const QDate& startDate, const QDate& endDate) const {
^
src/kOrganizify/kOrganizify/src/settings.cpp:39:0: style: The function 'setColor' is never used. [unusedFunction]
void Settings::setColor(QString color) {
^
src/kOrganizify/kOrganizify/src/settings.cpp:43:0: style: The function 'backgroundPath' is never used. [unusedFunction]
QString Settings::backgroundPath()
^
src/kOrganizify/kOrganizify/src/settings.cpp:48:0: style: The function 'setBackgroundPath' is never used. [unusedFunction]
void Settings::setBackgroundPath(QString backgroundPath)
^
src/kOrganizify/kOrganizify/src/settings.cpp:57:0: style: The function 'setNotifications' is never used. [unusedFunction]
void Settings::setNotifications(bool notifications) {
^
src/kOrganizify/kOrganizify/src/syncresponsewindow.cpp:40:0: style: The function 'changeColor' is never used. [unusedFunction]
void SyncResponseWindow::changeColor(QString color){
^
nofile:0:0: information: Active checkers: There was critical errors (use --checkers-report=<filename> to see details) [checkersReport]

